{
  "hash": "6919887075e15b74a9d3cf40e5dc3f4f",
  "result": {
    "markdown": "## Import Library\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#combine data\ndf1 = pd.read_csv(\"san_bernandino.csv\")\ndf2 = pd.read_csv(\"san_diego.csv\")\ndf3 = pd.read_csv(\"imperial.csv\")\ndf4 = pd.read_csv(\"los_angeles.csv\")\ndf5 = pd.read_csv(\"orange.csv\")\ndf6 = pd.read_csv(\"san_luis_obispo.csv\")\ndf7 = pd.read_csv(\"santa_barbara.csv\")\ndf8 = pd.read_csv(\"ventura.csv\")\ndf9 = pd.read_csv(\"riverside.csv\")\n\n# Read CSV files from List\ndf = pd.concat([df1,df2,df3,df4,df5,df6,df7,df8,df9])\ndf = df.drop(\"Unnamed: 0\",axis=1)\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 36162 entries, 0 to 4017\nData columns (total 17 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   Name                 36162 non-null  object \n 1   Date time            36162 non-null  object \n 2   Maximum Temperature  36162 non-null  float64\n 3   Minimum Temperature  36162 non-null  float64\n 4   Temperature          36162 non-null  float64\n 5   Wind Chill           8017 non-null   float64\n 6   Heat Index           10431 non-null  float64\n 7   Precipitation        36162 non-null  float64\n 8   Snow                 19728 non-null  float64\n 9   Snow Depth           19743 non-null  float64\n 10  Wind Speed           36162 non-null  float64\n 11  Wind Direction       36162 non-null  float64\n 12  Wind Gust            21944 non-null  float64\n 13  Visibility           36162 non-null  float64\n 14  Cloud Cover          36162 non-null  float64\n 15  Relative Humidity    36162 non-null  float64\n 16  Conditions           36162 non-null  object \ndtypes: float64(14), object(3)\nmemory usage: 5.0+ MB\n```\n:::\n:::\n\n\n## Remove Column with more than 40 % Null Values\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf = df.drop(['Wind Chill','Heat Index','Snow','Snow Depth','Wind Gust'], axis = 1)\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 36162 entries, 0 to 4017\nData columns (total 12 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   Name                 36162 non-null  object \n 1   Date time            36162 non-null  object \n 2   Maximum Temperature  36162 non-null  float64\n 3   Minimum Temperature  36162 non-null  float64\n 4   Temperature          36162 non-null  float64\n 5   Precipitation        36162 non-null  float64\n 6   Wind Speed           36162 non-null  float64\n 7   Wind Direction       36162 non-null  float64\n 8   Visibility           36162 non-null  float64\n 9   Cloud Cover          36162 non-null  float64\n 10  Relative Humidity    36162 non-null  float64\n 11  Conditions           36162 non-null  object \ndtypes: float64(9), object(3)\nmemory usage: 3.6+ MB\n```\n:::\n:::\n\n\n## Remove Outliers\n\n``` {.python .cell-code}\ncol= ['Maximum Temperature',\n           'Minimum Temperature',\n           'Temperature',\n           'Precipitation',\n           'Wind Speed', \n           'Wind Direction',\n           'Visibility',\n           'Cloud Cover', \n           'Relative Humidity'\n]\n```\n\n\n### With Outliers\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 4))\ndf.boxplot(col)\nplt.xticks(rotation = 45)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){}\n:::\n:::\n\n\n### Remove With IQR\n\n``` {.python .cell-code}\nfor x in ['Minimum Temperature']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    intr_qr = q75-q25\n \n    max = q75+(1.5*intr_qr)\n    min = q25-(1.5*intr_qr)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n    \nfor x in ['Temperature']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    intr_qr = q75-q25\n \n    max = q75+(1.5*intr_qr)\n    min = q25-(1.5*intr_qr)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n\nfor x in ['Maximum Temperature']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    IQR = q75-q25\n \n    max = q75+(1.5*IQR)\n    min = q25-(1.5*IQR)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n\nfor x in ['Precipitation']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    IQR = q75-q25\n \n    max = q75+(1.5*IQR)\n    min = q25-(1.5*IQR)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n    \nfor x in ['Wind Speed']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    intr_qr = q75-q25\n \n    max = q75+(1.5*intr_qr)\n    min = q25-(1.5*intr_qr)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n    \nfor x in ['Visibility']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    intr_qr = q75-q25\n \n    max = q75+(1.5*intr_qr)\n    min = q25-(1.5*intr_qr)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n\nfor x in ['Wind Direction']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    IQR = q75-q25\n \n    max = q75+(1.5*IQR)\n    min = q25-(1.5*IQR)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n\nfor x in ['Relative Humidity']:\n    q75,q25 = np.percentile(df.loc[:,x],[75,25])\n    IQR = q75-q25\n \n    max = q75+(1.5*IQR)\n    min = q25-(1.5*IQR)\n \n    df.loc[df[x] < min,x] = np.nan\n    df.loc[df[x] > max,x] = np.nan\n\n```\n\n\n### Without Outliers\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nplt.figure(figsize=(10, 4))\ndf.boxplot(col)\nplt.xticks(rotation = 45)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){}\n:::\n:::\n\n\n### Check for Na's\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndf.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n(36162, 12)\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 36162 entries, 0 to 4017\nData columns (total 12 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   Name                 36162 non-null  object \n 1   Date time            36162 non-null  object \n 2   Maximum Temperature  35098 non-null  float64\n 3   Minimum Temperature  35627 non-null  float64\n 4   Temperature          34932 non-null  float64\n 5   Precipitation        31725 non-null  float64\n 6   Wind Speed           34897 non-null  float64\n 7   Wind Direction       36160 non-null  float64\n 8   Visibility           33164 non-null  float64\n 9   Cloud Cover          36162 non-null  float64\n 10  Relative Humidity    36115 non-null  float64\n 11  Conditions           36162 non-null  object \ndtypes: float64(9), object(3)\nmemory usage: 3.6+ MB\n```\n:::\n:::\n\n\n::: {.cell tags='[]' execution_count=9}\n``` {.python .cell-code}\ndf.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nName                      0\nDate time                 0\nMaximum Temperature    1064\nMinimum Temperature     535\nTemperature            1230\nPrecipitation          4437\nWind Speed             1265\nWind Direction            2\nVisibility             2998\nCloud Cover               0\nRelative Humidity        47\nConditions                0\ndtype: int64\n```\n:::\n:::\n\n\n``` {.python .cell-code}\ndf = df.dropna(axis=0)\n```\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ndf.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nName                   0\nDate time              0\nMaximum Temperature    0\nMinimum Temperature    0\nTemperature            0\nPrecipitation          0\nWind Speed             0\nWind Direction         0\nVisibility             0\nCloud Cover            0\nRelative Humidity      0\nConditions             0\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 27055 entries, 0 to 4017\nData columns (total 12 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   Name                 27055 non-null  object \n 1   Date time            27055 non-null  object \n 2   Maximum Temperature  27055 non-null  float64\n 3   Minimum Temperature  27055 non-null  float64\n 4   Temperature          27055 non-null  float64\n 5   Precipitation        27055 non-null  float64\n 6   Wind Speed           27055 non-null  float64\n 7   Wind Direction       27055 non-null  float64\n 8   Visibility           27055 non-null  float64\n 9   Cloud Cover          27055 non-null  float64\n 10  Relative Humidity    27055 non-null  float64\n 11  Conditions           27055 non-null  object \ndtypes: float64(9), object(3)\nmemory usage: 2.7+ MB\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\ndf['Conditions'].unique()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\narray(['Clear', 'Partially cloudy', 'Overcast', 'Snow',\n       'Snow, Partially cloudy'], dtype=object)\n```\n:::\n:::\n\n\n## Export CSV\n\n``` {.python .cell-code}\ndf.to_csv(\"clean_southern.csv\")\n```\n\n\n## Features Engineering\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nhm = sns.heatmap(df.corr(), annot = True)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-16-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nsns.regplot(x=df[\"Cloud Cover\"], y=df[\"Relative Humidity\"])\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\n<AxesSubplot:xlabel='Cloud Cover', ylabel='Relative Humidity'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-17-output-2.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}