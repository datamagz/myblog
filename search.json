[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Lulus Adhitya Kahono",
    "section": "",
    "text": "{‘data Science, statistics and more…’}"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog!",
    "section": "",
    "text": "Hello, world! I wrote this blog to make notes of all insights that I discovered on my data science journey. I love wrangling and exploring data."
  },
  {
    "objectID": "posts/weather_stats/index.html",
    "href": "posts/weather_stats/index.html",
    "title": "Statistical Analysis of Southern California Weather Variables",
    "section": "",
    "text": "Data Source\n\nShow the code\n## Import Library\nimport rpy2.robjects as robjects\n%load_ext rpy2.ipython\n\n\nShow the code\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.pyplot import figure\nplt.style.use('ggplot')\n\n\n\nShow the code\n%R require(report)      # to report results\n%R require(sjPlot)      # visualizes model results\n%R require(flextable)   # for beautiful tables\n%R require(tidyverse)   # provides a lot of useful stuff !!! \n%R require(ggstatsplot) # to visualize test results\n%R require(ggcorrplot) # to visualize test results\n%R options(warn=-1)\n\n\nR[write to console]: Loading required package: report\n\n\n\nR[write to console]: Loading required package: sjPlot\n\n\n\nR[write to console]: Loading required package: flextable\n\n\n\nR[write to console]: Loading required package: tidyverse\n\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::compose() masks flextable::compose()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n\n\nR[write to console]: Loading required package: ggstatsplot\n\n\n\nR[write to console]: You can cite this package as:\n     Patil, I. (2021). Visualizations with statistical details: The 'ggstatsplot' approach.\n     Journal of Open Source Software, 6(61), 3167, doi:10.21105/joss.03167\n\n\n\nR[write to console]: Loading required package: ggcorrplot\n\n\n\no{'warn': [0], }\n\n\n\n\nShow the code\ndf = pd.read_csv(\"clean_df.csv\")\ndf.head()\n\n\n\n\n\n\n  \n    \n      \n      Unnamed: 0\n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Conditions\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n  \n  \n    \n      0\n      5475\n      Imperial, CA, United States\n      2010-01-01\n      69.3\n      37.2\n      52.4\n      0.0\n      8.0\n      252.79\n      9.9\n      0.0\n      35.89\n      Clear\n      2010\n      1.0\n      1.0\n      Imperial\n      CA\n      United States\n    \n    \n      1\n      5476\n      Imperial, CA, United States\n      2010-01-02\n      73.2\n      39.6\n      55.3\n      0.0\n      5.9\n      210.79\n      9.7\n      0.1\n      32.16\n      Clear\n      2010\n      1.0\n      2.0\n      Imperial\n      CA\n      United States\n    \n    \n      2\n      5477\n      Imperial, CA, United States\n      2010-01-03\n      75.0\n      37.8\n      55.9\n      0.0\n      7.9\n      168.78\n      9.9\n      0.0\n      32.29\n      Clear\n      2010\n      1.0\n      3.0\n      Imperial\n      CA\n      United States\n    \n    \n      3\n      5478\n      Imperial, CA, United States\n      2010-01-04\n      73.7\n      41.1\n      55.3\n      0.0\n      7.0\n      253.29\n      9.9\n      1.4\n      29.90\n      Clear\n      2010\n      1.0\n      4.0\n      Imperial\n      CA\n      United States\n    \n    \n      4\n      5479\n      Imperial, CA, United States\n      2010-01-05\n      73.7\n      39.6\n      54.9\n      0.0\n      8.1\n      272.92\n      9.9\n      0.1\n      31.93\n      Clear\n      2010\n      1.0\n      5.0\n      Imperial\n      CA\n      United States\n    \n  \n\n\n\n\n\nShow the code\ndf = df.drop(['Unnamed: 0'], axis=1)\n\n\nShow the code\nsubset = df[['County','Maximum Temperature','Minimum Temperature','Temperature',\n              'Precipitation','Relative Humidity','Cloud Cover','Wind Direction',\n             'Wind Speed','Visibility']]\n\n\nShow the code\n%R -i subset\n\n\n\nShow the code\n%%R \nclass(subset)\n\n\n[1]\n\n\n \"data.frame\""
  },
  {
    "objectID": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-temperature",
    "href": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-temperature",
    "title": "Statistical Analysis of Southern California Weather Variables",
    "section": "1. Geographic locations effect to level of Temperature",
    "text": "1. Geographic locations effect to level of Temperature\n\n\nShow the code\n%%R\n# Change box plot colors by groups\nggplot(subset, aes(x=County, y=Temperature, fill=County, \n                  options(repr.plot.width=50, repr.plot.height=10))) +\n  geom_boxplot() +\n    theme(legend.position = \"right\", \n    axis.ticks = element_blank(), \n    axis.text.x = element_text(angle = 45, hjust = 0, colour = \"black\"),\n    axis.text.y = element_text(hjust = 1, colour = \"black\"))\n\n\n\n\n\n\n\nShow the code\n%%R\npopulation_variance <- function(rv) {\n mean((rv - mean(rv)) ^ 2)\n}\n\nweights <- subset$Temperature\npopulation_variance(weights)\n\n\n[1]\n\n\n 94.57607\n\n\n\n\n\n\n\nShow the code\n%%R\noneway.test(Temperature ~ County,\n  data = subset,\n  var.equal = FALSE # assuming unequal variances - Welch Anova\n)\n\n\n\n\n\n    One-way analysis of means (not assuming equal variances)\n\n\n\n\n\n\n\n\ndata:  \n\n\nTemperature and County\n\n\n\n\n\nF = 850.85, num df = 8, denom df = 15015, p-value < 2.2e-16\n\n\n\n\n\n\n\n\n\n\nShow the code\n%%R\naov(Temperature ~ County, data = subset) %>% \n  report()\n\n\nThe ANOVA (formula: Temperature ~ County) suggests that:\n\n  - The main effect of County is statistically significant and large (F(8, 36153)\n= 1088.27, p < .001; Eta2 = 0.19, 95% CI [0.19, 1.00])\n\nEffect sizes were labelled following Field's (2013) recommendations."
  },
  {
    "objectID": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-relative-humidity",
    "href": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-relative-humidity",
    "title": "Statistical Analysis of Southern California Weather Variables",
    "section": "2. Geographic locations effect to level of Relative Humidity",
    "text": "2. Geographic locations effect to level of Relative Humidity\n\n\nShow the code\n%%R\n# Change box plot colors by groups\nfig1 <- ggplot(subset, aes(x=County, y=subset$'Relative Humidity', fill=County, \n                  options(repr.plot.width=50, repr.plot.height=10))) +\n  geom_boxplot() +\n    theme(legend.position = \"right\", \n    axis.ticks = element_blank(), \n    axis.text.x = element_text(angle = 45, hjust = 0, colour = \"black\"),\n    axis.text.y = element_text(hjust = 1, colour = \"black\"))\nfig1 + labs(y=\"Relative Humidity\")\n\n\n\n\n\n\n\nShow the code\n%%R\npopulation_variance <- function(rv) {\n mean((rv - mean(rv)) ^ 2)\n}\n\nweights <- subset$'Relative Humidity'\npopulation_variance(weights)\n\n\n[1]\n\n\n 332.4537\n\n\n\n\n\n\n\nShow the code\n%%R\noneway.test(subset$'Relative Humidity' ~ County,\n  data = subset,\n  var.equal = FALSE # assuming unequal variances - Welch Anova\n)\n\n\n\n\n\n    One-way analysis of means (not assuming equal variances)\n\n\n\n\n\n\n\n\ndata:  \n\n\nsubset$\"Relative Humidity\" and County\n\n\n\n\n\nF = 2611.5, num df = 8, denom df = 15050, p-value < 2.2e-16\n\n\n\n\n\n\n\n\n\n\nShow the code\n%%R\naov(subset$'Relative Humidity' ~ County, data = subset) %>% \n  report()\n\n\nThe ANOVA (formula: subset$\"Relative Humidity\" ~ County) suggests that:\n\n  - The main effect of County is statistically significant and large (F(8, 36153)\n= 2333.44, p < .001; Eta2 = 0.34, 95% CI [0.36, 1.00])\n\nEffect sizes were labelled following Field's (2013) recommendations."
  },
  {
    "objectID": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-cloud-cover",
    "href": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-cloud-cover",
    "title": "Statistical Analysis of Southern California Weather Variables",
    "section": "3. Geographic locations effect to level of Cloud Cover",
    "text": "3. Geographic locations effect to level of Cloud Cover\n\n\nShow the code\n%%R\n# Change box plot colors by groups\nfig2 <- ggplot(subset, aes(x=County, y=subset$'Cloud Cover', fill=County, \n                  options(repr.plot.width=50, repr.plot.height=10))) +\n  geom_boxplot() +\n    theme(legend.position = \"right\", \n    axis.ticks = element_blank(), \n    axis.text.x = element_text(angle = 45, hjust = 0, colour = \"black\"),\n    axis.text.y = element_text(hjust = 1, colour = \"black\"))\nfig2 + labs(y=\"Cloud Cover\")\n\n\n\n\n\n\n\nShow the code\n%%R\npopulation_variance <- function(rv) {\n mean((rv - mean(rv)) ^ 2)\n}\n\nweights <- subset$'Cloud Cover'\npopulation_variance(weights)\n\n\n[1]\n\n\n 873.9499\n\n\n\n\n\n\n\nShow the code\n%%R\noneway.test(subset$'Cloud Cover' ~ County,\n  data = subset,\n  var.equal = FALSE # assuming unequal variances - Welch Anova\n)\n\n\n\n\n\n    One-way analysis of means (not assuming equal variances)\n\n\n\n\n\n\n\n\ndata:  \n\n\nsubset$\"Cloud Cover\" and County\n\n\n\n\n\nF = 2076.3, num df = 8, denom df = 14927, p-value < 2.2e-16\n\n\n\n\n\n\n\n\n\n\nShow the code\n%%R\naov(subset$'Cloud Cover' ~ County, data = subset) %>% \n  report()\n\n\nThe ANOVA (formula: subset$\"Cloud Cover\" ~ County) suggests that:\n\n  - The main effect of County is statistically significant and large (F(8, 36153)\n= 1029.98, p < .001; Eta2 = 0.19, 95% CI [0.18, 1.00])\n\nEffect sizes were labelled following Field's (2013) recommendations."
  },
  {
    "objectID": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-wind-direction",
    "href": "posts/weather_stats/index.html#geographic-locations-effect-to-level-of-wind-direction",
    "title": "Statistical Analysis of Southern California Weather Variables",
    "section": "4. Geographic locations effect to level of Wind Direction",
    "text": "4. Geographic locations effect to level of Wind Direction\n\n\nShow the code\n%%R\n# Change box plot colors by groups\nfig3 <- ggplot(subset, aes(x=County, y=subset$'Wind Direction', fill=County, \n                  options(repr.plot.width=50, repr.plot.height=10))) +\n  geom_boxplot() +\n    theme(legend.position = \"right\", \n    axis.ticks = element_blank(), \n    axis.text.x = element_text(angle = 45, hjust = 0, colour = \"black\"),\n    axis.text.y = element_text(hjust = 1, colour = \"black\"))\nfig3 + labs(y=\"Wind Direction\")\n\n\n\n\n\n\n\nShow the code\n%%R\npopulation_variance <- function(rv) {\n mean((rv - mean(rv)) ^ 2)\n}\n\nweights <- subset$'Wind Direction'\npopulation_variance(weights)\n\n\n[1]\n\n\n 3259.399\n\n\n\n\n\n\n\nShow the code\n%%R\noneway.test(subset$'Wind Direction' ~ County,\n  data = subset,\n  var.equal = FALSE # assuming unequal variances - Welch Anova\n)\n\n\n\n\n\n    One-way analysis of means (not assuming equal variances)\n\n\n\n\n\n\n\n\ndata:  \n\n\nsubset$\"Wind Direction\" and County\n\n\n\n\n\nF = 669.95, num df = 8, denom df = 15052, p-value < 2.2e-16\n\n\n\n\n\n\n\n\n\n\nShow the code\n%%R\naov(subset$'Wind Direction' ~ County, data = subset) %>% \n  report()\n\n\nThe ANOVA (formula: subset$\"Wind Direction\" ~ County) suggests that:\n\n  - The main effect of County is statistically significant and medium (F(8,\n36153) = 635.74, p < .001; Eta2 = 0.12, 95% CI [0.12, 1.00])\n\nEffect sizes were labelled following Field's (2013) recommendations."
  },
  {
    "objectID": "posts/southcal_fireincident/index.html",
    "href": "posts/southcal_fireincident/index.html",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "",
    "text": "Show the code\nimport rpy2.robjects as robjects\n%load_ext rpy2.ipython\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nimport folium\nfrom matplotlib.pyplot import figure\nplt.style.use('ggplot')\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n\nShow the code\n%R require(tidyverse)\n%R require(DataExplorer)\n%R require(readxl)\n%R require(esquisse)\n%R require(lubridate)\n%R options(warn=-1)\n\n\nR[write to console]: Loading required package: tidyverse\n\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nR[write to console]: Loading required package: DataExplorer\n\n\n\nR[write to console]: Loading required package: readxl\n\n\n\nR[write to console]: Loading required package: esquisse\n\n\n\nR[write to console]: Loading required package: lubridate\n\n\n\nR[write to console]: \nAttaching package: ‘lubridate’\n\n\n\n\nR[write to console]: The following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n\n\n\no{'warn': [0], }\n\n\n\n\nShow the code\n%R df <- read_csv(\"California_Fire_Incidents.csv\")\n%R head(df)\n\n\nRows: 1636 Columns: 40\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (12): AdminUnit, CanonicalUrl, ConditionStatement, ControlStatement, Co...\ndbl  (17): AcresBurned, AirTankers, ArchiveYear, CrewsInvolved, Dozers, Engi...\nlgl   (8): Active, CalFireIncident, Featured, Final, FuelType, MajorIncident...\ndttm  (3): Extinguished, Started, Updated\n\n\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n  \n    \n      \n      AcresBurned\n      Active\n      AdminUnit\n      AirTankers\n      ArchiveYear\n      CalFireIncident\n      CanonicalUrl\n      ConditionStatement\n      ControlStatement\n      Counties\n      ...\n      SearchKeywords\n      Started\n      Status\n      StructuresDamaged\n      StructuresDestroyed\n      StructuresEvacuated\n      StructuresThreatened\n      UniqueId\n      Updated\n      WaterTenders\n    \n  \n  \n    \n      1\n      257314.0\n      0\n      Stanislaus National Forest/Yosemite National Park\n      NaN\n      2013.0\n      1\n      /incidents/2013/8/17/rim-fire/\n      None\n      None\n      Tuolumne\n      ...\n      Rim Fire, Stanislaus National Forest, Yosemite...\n      2013-08-17 15:25:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      5fb18d4d-213f-4d83-a179-daaf11939e78\n      2013-09-06 18:30:00+00:00\n      NaN\n    \n    \n      2\n      30274.0\n      0\n      USFS Angeles National Forest/Los Angeles Count...\n      NaN\n      2013.0\n      1\n      /incidents/2013/5/30/powerhouse-fire/\n      None\n      None\n      Los Angeles\n      ...\n      Powerhouse Fire, May 2013, June 2013, Angeles ...\n      2013-05-30 15:28:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      bf37805e-1cc2-4208-9972-753e47874c87\n      2013-06-08 18:30:00+00:00\n      NaN\n    \n    \n      3\n      27531.0\n      0\n      CAL FIRE Riverside Unit / San Bernardino Natio...\n      NaN\n      2013.0\n      1\n      /incidents/2013/7/15/mountain-fire/\n      None\n      None\n      Riverside\n      ...\n      Mountain Fire, July 2013, Highway 243, Highway...\n      2013-07-15 13:43:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      a3149fec-4d48-427c-8b2c-59e8b79d59db\n      2013-07-30 18:00:00+00:00\n      NaN\n    \n    \n      4\n      27440.0\n      0\n      Tahoe National Forest\n      NaN\n      2013.0\n      0\n      /incidents/2013/8/10/american-fire/\n      None\n      None\n      Placer\n      ...\n      American Fire, August 2013, Deadwood Ridge, Fo...\n      2013-08-10 16:30:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      8213f5c7-34fa-403b-a4bc-da2ace6e6625\n      2013-08-30 08:00:00+00:00\n      NaN\n    \n    \n      5\n      24251.0\n      0\n      Ventura County Fire/CAL FIRE\n      NaN\n      2013.0\n      1\n      /incidents/2013/5/2/springs-fire/\n      Acreage has been reduced based upon more accur...\n      None\n      Ventura\n      ...\n      Springs Fire, May 2013, Highway 101, Camarillo...\n      2013-05-02 07:01:00+00:00\n      Finalized\n      6.0\n      10.0\n      -2147483648\n      NaN\n      46731fb8-3350-4920-bdf7-910ac0eb715c\n      2013-05-11 06:30:00+00:00\n      11.0\n    \n    \n      6\n      22992.0\n      0\n      Sierra National Forest\n      NaN\n      2013.0\n      0\n      /incidents/2013/7/22/aspen-fire/\n      None\n      None\n      Fresno\n      ...\n      217  Aspen Fire, July 2013, Big Creek, Fresno ...\n      2013-07-22 22:15:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      bee8c339-4f26-4b78-a5b4-a8a0ebdb8786\n      2013-09-24 20:15:00+00:00\n      NaN\n    \n  \n\n6 rows × 40 columns\n\n\n\n\n\nShow the code\n%R plot_missing(df)\n%R options(warn=-1)\n\n\n\n\n\no{'warn': [-1], }\n\n\n\n\nShow the code\n%R -o df df\ndf.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nIndex: 1636 entries, 1 to 1636\nData columns (total 40 columns):\n #   Column                Non-Null Count  Dtype              \n---  ------                --------------  -----              \n 0   AcresBurned           1633 non-null   float64            \n 1   Active                1636 non-null   int32              \n 2   AdminUnit             1636 non-null   object             \n 3   AirTankers            28 non-null     float64            \n 4   ArchiveYear           1636 non-null   float64            \n 5   CalFireIncident       1636 non-null   int32              \n 6   CanonicalUrl          1636 non-null   object             \n 7   ConditionStatement    283 non-null    object             \n 8   ControlStatement      111 non-null    object             \n 9   Counties              1636 non-null   object             \n 10  CountyIds             1636 non-null   object             \n 11  CrewsInvolved         171 non-null    float64            \n 12  Dozers                123 non-null    float64            \n 13  Engines               191 non-null    float64            \n 14  Extinguished          1577 non-null   datetime64[ns, UTC]\n 15  Fatalities            21 non-null     float64            \n 16  Featured              1636 non-null   int32              \n 17  Final                 1636 non-null   int32              \n 18  FuelType              1636 non-null   int32              \n 19  Helicopters           84 non-null     float64            \n 20  Injuries              120 non-null    float64            \n 21  Latitude              1636 non-null   float64            \n 22  Location              1636 non-null   object             \n 23  Longitude             1636 non-null   float64            \n 24  MajorIncident         1636 non-null   int32              \n 25  Name                  1636 non-null   object             \n 26  PercentContained      1633 non-null   float64            \n 27  PersonnelInvolved     204 non-null    float64            \n 28  Public                1636 non-null   int32              \n 29  SearchDescription     1619 non-null   object             \n 30  SearchKeywords        1433 non-null   object             \n 31  Started               1636 non-null   datetime64[ns, UTC]\n 32  Status                1636 non-null   object             \n 33  StructuresDamaged     67 non-null     float64            \n 34  StructuresDestroyed   175 non-null    float64            \n 35  StructuresEvacuated   1636 non-null   int32              \n 36  StructuresThreatened  30 non-null     float64            \n 37  UniqueId              1636 non-null   object             \n 38  Updated               1636 non-null   datetime64[ns, UTC]\n 39  WaterTenders          146 non-null    float64            \ndtypes: datetime64[ns, UTC](3), float64(17), int32(8), object(12)\nmemory usage: 472.9+ KB\n\n\n\n\nShow the code\ndf['Counties'].unique()\n\n\narray(['Tuolumne', 'Los Angeles', 'Riverside', 'Placer', 'Ventura',\n       'Fresno', 'Siskiyou', 'Humboldt', 'Tehama', 'Shasta', 'San Diego',\n       'Kern', 'Sonoma', 'Contra Costa', 'Butte', 'Tulare',\n       'Santa Barbara', 'Mariposa', 'Monterey', 'El Dorado',\n       'San Bernardino', 'Plumas', 'Modoc', 'San Luis Obispo', 'Madera',\n       'Inyo', 'Napa', 'San Benito', 'San Joaquin', 'Lake', 'Alameda',\n       'Glenn', 'Yolo', 'Sacramento', 'Stanislaus', 'Solano', 'Merced',\n       'Mendocino', 'Lassen', 'Amador', 'Yuba', 'Nevada', 'Santa Clara',\n       'Calaveras', 'San Mateo', 'Orange', 'Colusa', 'Trinity',\n       'Del Norte', 'Mono', 'Alpine', 'Sutter', 'Kings', 'Sierra',\n       'Santa Cruz', 'Marin', 'Mexico', 'State of Oregon',\n       'State of Nevada'], dtype=object)\n\n\n\nShow the code\n# Filtered County\ndf_south = df[df['Counties'].apply(lambda val: all(val != s for s in ['Tuolumne', 'Placer',\n       'Fresno', 'Siskiyou', 'Humboldt', 'Tehama', 'Shasta',\n       'Kern', 'Sonoma', 'Contra Costa', 'Butte', 'Tulare',\n       'Mariposa', 'Monterey', 'El Dorado',\n       'Plumas', 'Modoc', 'Madera',\n       'Inyo', 'Napa', 'San Benito', 'San Joaquin', 'Lake', 'Alameda',\n       'Glenn', 'Yolo', 'Sacramento', 'Stanislaus', 'Solano', 'Merced',\n       'Mendocino', 'Lassen', 'Amador', 'Yuba', 'Nevada', 'Santa Clara',\n       'Calaveras', 'San Mateo', 'Colusa', 'Trinity',\n       'Del Norte', 'Mono', 'Alpine', 'Sutter', 'Kings', 'Sierra',\n       'Santa Cruz', 'Marin', 'Mexico', 'State of Oregon',\n       'State of Nevada']))]\n\n\n\nShow the code\ndf_south['Counties'].unique()\n\n\narray(['Los Angeles', 'Riverside', 'Ventura', 'San Diego',\n       'Santa Barbara', 'San Bernardino', 'San Luis Obispo', 'Orange'],\n      dtype=object)\n\n\n\n\nShow the code\ndf_south.head()\n\n\n\n\n\n\n  \n    \n      \n      AcresBurned\n      Active\n      AdminUnit\n      AirTankers\n      ArchiveYear\n      CalFireIncident\n      CanonicalUrl\n      ConditionStatement\n      ControlStatement\n      Counties\n      ...\n      SearchKeywords\n      Started\n      Status\n      StructuresDamaged\n      StructuresDestroyed\n      StructuresEvacuated\n      StructuresThreatened\n      UniqueId\n      Updated\n      WaterTenders\n    \n  \n  \n    \n      2\n      30274.0\n      0\n      USFS Angeles National Forest/Los Angeles Count...\n      NaN\n      2013.0\n      1\n      /incidents/2013/5/30/powerhouse-fire/\n      None\n      None\n      Los Angeles\n      ...\n      Powerhouse Fire, May 2013, June 2013, Angeles ...\n      2013-05-30 15:28:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      bf37805e-1cc2-4208-9972-753e47874c87\n      2013-06-08 18:30:00+00:00\n      NaN\n    \n    \n      3\n      27531.0\n      0\n      CAL FIRE Riverside Unit / San Bernardino Natio...\n      NaN\n      2013.0\n      1\n      /incidents/2013/7/15/mountain-fire/\n      None\n      None\n      Riverside\n      ...\n      Mountain Fire, July 2013, Highway 243, Highway...\n      2013-07-15 13:43:00+00:00\n      Finalized\n      NaN\n      NaN\n      -2147483648\n      NaN\n      a3149fec-4d48-427c-8b2c-59e8b79d59db\n      2013-07-30 18:00:00+00:00\n      NaN\n    \n    \n      5\n      24251.0\n      0\n      Ventura County Fire/CAL FIRE\n      NaN\n      2013.0\n      1\n      /incidents/2013/5/2/springs-fire/\n      Acreage has been reduced based upon more accur...\n      None\n      Ventura\n      ...\n      Springs Fire, May 2013, Highway 101, Camarillo...\n      2013-05-02 07:01:00+00:00\n      Finalized\n      6.0\n      10.0\n      -2147483648\n      NaN\n      46731fb8-3350-4920-bdf7-910ac0eb715c\n      2013-05-11 06:30:00+00:00\n      11.0\n    \n    \n      7\n      20292.0\n      0\n      CAL FIRE Riverside Unit / San Bernardino Natio...\n      NaN\n      2013.0\n      1\n      /incidents/2013/8/7/silver-fire/\n      Firefighters closed the containment lines toda...\n      Hwy 243 remains closed between Twin Pines Road...\n      Riverside\n      ...\n      Silver Fire, August 2013, Popet Flats Road, Hi...\n      2013-08-07 14:05:00+00:00\n      Finalized\n      8.0\n      40.0\n      -2147483648\n      NaN\n      c400203b-a7fd-4bd8-803a-f3c74bc32a2b\n      2013-08-12 18:00:00+00:00\n      20.0\n    \n    \n      12\n      7055.0\n      0\n      CAL FIRE San Diego Unit / Cleveland National F...\n      NaN\n      2013.0\n      1\n      /incidents/2013/7/6/chariot-fire/\n      None\n      None\n      San Diego\n      ...\n      Chariot Fire, July 2013, Sunrise Hwy, Julian, ...\n      2013-07-06 12:55:00+00:00\n      Finalized\n      9.0\n      149.0\n      -2147483648\n      NaN\n      ee19b2ec-a96a-4738-994e-fb3ea016e053\n      2013-07-15 06:15:00+00:00\n      24.0\n    \n  \n\n5 rows × 40 columns\n\n\n\n\nShow the code\n%R -i df_south\n\n\n\nShow the code\n%R plot_missing(df_south)\n%R options(warn=-1)\n\n\n\n\n\no{'warn': [-1], }\n\n\n\n\nShow the code\ndf_fire = df_south[['Started','Counties','CalFireIncident']]\ndf_fire.head()\n\n\n\n\n\n\n  \n    \n      \n      Started\n      Counties\n      CalFireIncident\n    \n  \n  \n    \n      2\n      2013-05-30 15:28:00+00:00\n      Los Angeles\n      1\n    \n    \n      3\n      2013-07-15 13:43:00+00:00\n      Riverside\n      1\n    \n    \n      5\n      2013-05-02 07:01:00+00:00\n      Ventura\n      1\n    \n    \n      7\n      2013-08-07 14:05:00+00:00\n      Riverside\n      1\n    \n    \n      12\n      2013-07-06 12:55:00+00:00\n      San Diego\n      1\n    \n  \n\n\n\n\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-ptawblnkug\");\n    \n# Added column new-column-q0fm\ndf_fire.insert(1, 'new-column-q0fm', 0)\n\n# Set formula of new-column-q0fm\ndf_fire['new-column-q0fm'] = YEAR(df_fire['Started'])\n\n# Renamed columns Year\ndf_fire.rename(columns={'new-column-q0fm': 'Year'}, inplace=True)\n\n# Added column new-column-epid\ndf_fire.insert(2, 'new-column-epid', 0)\n\n# Set formula of new-column-epid\ndf_fire['new-column-epid'] = MONTH(df_fire['Started'])\n\n# Renamed columns Month\ndf_fire.rename(columns={'new-column-epid': 'Month'}, inplace=True)\n\n# Added column new-column-zudb\ndf_fire.insert(4, 'new-column-zudb', 0)\n\n# Reordered column new-column-zudb\ndf_fire_columns = [col for col in df_fire.columns if col != 'new-column-zudb']\ndf_fire_columns.insert(3, 'new-column-zudb')\ndf_fire = df_fire[df_fire_columns]\n\n# Set formula of new-column-zudb\ndf_fire['new-column-zudb'] = DAY(df_fire['Started'])\n\n# Renamed columns Day\ndf_fire.rename(columns={'new-column-zudb': 'Day'}, inplace=True)\n\n\n\nShow the code\ndf_fire\n\n\n\n\n\n\n  \n    \n      \n      Started\n      Year\n      Month\n      Day\n      Counties\n      CalFireIncident\n    \n  \n  \n    \n      2\n      2013-05-30 15:28:00+00:00\n      2013\n      5\n      30\n      Los Angeles\n      1\n    \n    \n      3\n      2013-07-15 13:43:00+00:00\n      2013\n      7\n      15\n      Riverside\n      1\n    \n    \n      5\n      2013-05-02 07:01:00+00:00\n      2013\n      5\n      2\n      Ventura\n      1\n    \n    \n      7\n      2013-08-07 14:05:00+00:00\n      2013\n      8\n      7\n      Riverside\n      1\n    \n    \n      12\n      2013-07-06 12:55:00+00:00\n      2013\n      7\n      6\n      San Diego\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      1625\n      2019-10-15 17:41:57+00:00\n      2019\n      10\n      15\n      San Diego\n      0\n    \n    \n      1628\n      2019-09-10 10:43:58+00:00\n      2019\n      9\n      10\n      Riverside\n      1\n    \n    \n      1632\n      2019-10-10 12:08:00+00:00\n      2019\n      10\n      10\n      Riverside\n      1\n    \n    \n      1635\n      2019-10-22 19:20:44+00:00\n      2019\n      10\n      22\n      San Diego\n      0\n    \n    \n      1636\n      2019-10-14 15:32:20+00:00\n      2019\n      10\n      14\n      Riverside\n      0\n    \n  \n\n467 rows × 6 columns"
  },
  {
    "objectID": "posts/southcal_fireincident/index.html#wildfire-in-southern-california-by-year",
    "href": "posts/southcal_fireincident/index.html#wildfire-in-southern-california-by-year",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "1. Wildfire in Southern California by Year",
    "text": "1. Wildfire in Southern California by Year\n\n\nShow the code\ndf_fire_year = df_fire.groupby(by=['Year','Counties']).sum()\ndf_fire_year = df_fire_year.reset_index()\ndf_fire_year.head()\n\n\n\n\n\n\n  \n    \n      \n      Year\n      Counties\n      Month\n      Day\n      CalFireIncident\n    \n  \n  \n    \n      0\n      2013\n      Los Angeles\n      32\n      107\n      3\n    \n    \n      1\n      2013\n      Orange\n      10\n      6\n      1\n    \n    \n      2\n      2013\n      Riverside\n      118\n      253\n      17\n    \n    \n      3\n      2013\n      San Bernardino\n      72\n      190\n      4\n    \n    \n      4\n      2013\n      San Diego\n      57\n      145\n      7\n    \n  \n\n\n\n\n\n\nShow the code\nplt.rcParams['figure.figsize']=(14,8)\nplt.title(\"Wildfire in South California by Year (2013 - 2020)\")\nsort_incident = df_fire_year.sort_values('CalFireIncident')\nax = sns.barplot(data=df_fire_year, x = 'Year', y = 'CalFireIncident', hue='Counties')\nplt.legend(loc='upper right')\nfor i in ax.containers:\n    ax.bar_label(i,)"
  },
  {
    "objectID": "posts/southcal_fireincident/index.html#wildfire-in-southern-california-by-month",
    "href": "posts/southcal_fireincident/index.html#wildfire-in-southern-california-by-month",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "2. Wildfire in Southern California by Month",
    "text": "2. Wildfire in Southern California by Month\n\n\nShow the code\ndf_fire_month = df_fire.groupby(by=['Month','Counties']).sum()\ndf_fire_month = df_fire_month.reset_index()\ndf_fire_month.head()\n\n\n\n\n\n\n  \n    \n      \n      Month\n      Counties\n      Year\n      Day\n      CalFireIncident\n    \n  \n  \n    \n      0\n      1\n      Los Angeles\n      2014\n      16\n      0\n    \n    \n      1\n      1\n      Santa Barbara\n      2018\n      9\n      0\n    \n    \n      2\n      1\n      Ventura\n      2018\n      9\n      0\n    \n    \n      3\n      2\n      Riverside\n      2013\n      28\n      1\n    \n    \n      4\n      3\n      Riverside\n      4028\n      43\n      2\n    \n  \n\n\n\n\n\n\nShow the code\nplt.rcParams['figure.figsize']=(14,8)\nplt.title(\"Wildfire in South California by Month (2013 - 2020)\")\nsort_incident = df_fire_year.sort_values('CalFireIncident')\nax = sns.barplot(data=df_fire_month, x = 'Month', y = 'CalFireIncident', hue='Counties')\nplt.legend(loc='upper right')\nfor i in ax.containers:\n    ax.bar_label(i,)"
  },
  {
    "objectID": "posts/southcal_fireincident/index.html#wildfire-incident-in-southern-california",
    "href": "posts/southcal_fireincident/index.html#wildfire-incident-in-southern-california",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "3. Wildfire Incident in Southern California",
    "text": "3. Wildfire Incident in Southern California\n\n\nShow the code\ndf_incident = df_south.groupby(by=\"Counties\").sum()\ndf_incident = df_incident.reset_index()\ndf_incident.head()\n\n\n\n\n\n\n  \n    \n      \n      Counties\n      AcresBurned\n      Active\n      AirTankers\n      ArchiveYear\n      CalFireIncident\n      CrewsInvolved\n      Dozers\n      Engines\n      Fatalities\n      ...\n      Longitude\n      MajorIncident\n      PercentContained\n      PersonnelInvolved\n      Public\n      StructuresDamaged\n      StructuresDestroyed\n      StructuresEvacuated\n      StructuresThreatened\n      WaterTenders\n    \n  \n  \n    \n      0\n      Los Angeles\n      194580.0\n      0.0\n      4.0\n      92758.0\n      9.0\n      26.0\n      0.0\n      124.0\n      4.0\n      ...\n      -4739.919160\n      6.0\n      4600.0\n      1367.0\n      46.0\n      485.0\n      1727.0\n      -9.878425e+10\n      10.0\n      6.0\n    \n    \n      1\n      Orange\n      36764.0\n      0.0\n      0.0\n      20162.0\n      7.0\n      13.0\n      8.0\n      51.0\n      0.0\n      ...\n      -1176.672695\n      1.0\n      1000.0\n      677.0\n      10.0\n      55.0\n      49.0\n      -2.147484e+10\n      0.0\n      1.0\n    \n    \n      2\n      Riverside\n      97362.0\n      0.0\n      6.0\n      294461.0\n      133.0\n      147.0\n      39.0\n      433.0\n      2.0\n      ...\n      -15025.962609\n      18.0\n      14500.0\n      3925.0\n      146.0\n      27.0\n      129.0\n      -3.135326e+11\n      0.0\n      39.0\n    \n    \n      3\n      San Bernardino\n      90897.0\n      0.0\n      0.0\n      106860.0\n      25.0\n      119.0\n      39.0\n      159.0\n      0.0\n      ...\n      -6095.972337\n      11.0\n      5300.0\n      3246.0\n      53.0\n      9.0\n      390.0\n      -1.138166e+11\n      0.0\n      66.0\n    \n    \n      4\n      San Diego\n      65394.0\n      0.0\n      56.0\n      179472.0\n      64.0\n      193.0\n      83.0\n      399.0\n      0.0\n      ...\n      -9704.296750\n      27.0\n      8800.0\n      7278.0\n      89.0\n      75.0\n      423.0\n      -1.911260e+11\n      226.0\n      101.0\n    \n  \n\n5 rows × 26 columns\n\n\n\n\n\nShow the code\nplt.rcParams['figure.figsize']=(14,8)\nplt.title(\"Wildfire Incident in South California (2013 - 2020)\")\nsort_incident = df_incident.sort_values('CalFireIncident')\nax = sns.barplot(data=sort_incident, x = 'Counties', y = 'CalFireIncident')\nfor i in ax.containers:\n    ax.bar_label(i,)"
  },
  {
    "objectID": "posts/southcal_fireincident/index.html#acresburned-in-southern-california",
    "href": "posts/southcal_fireincident/index.html#acresburned-in-southern-california",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "4. AcresBurned in Southern California",
    "text": "4. AcresBurned in Southern California\n\n\nShow the code\nplt.rcParams['figure.figsize']=(14,8)\nplt.title(\"AcresBurned in South California (2013 - 2020)\")\nsort_incident = df_incident.sort_values('AcresBurned')\nax = sns.barplot(data=sort_incident, x = 'Counties', y = 'AcresBurned')\nfor i in ax.containers:    #add numeric label\n    ax.bar_label(i,)"
  },
  {
    "objectID": "posts/southcal_fireincident/index.html#averageburned-vs-calfireincidents",
    "href": "posts/southcal_fireincident/index.html#averageburned-vs-calfireincidents",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "5. AverageBurned vs CalFireIncidents",
    "text": "5. AverageBurned vs CalFireIncidents\n\n\nShow the code\nplt.rcParams['figure.figsize']=(14,8)\nplt.title(\"AverageBurned vs CalFireIncident\")\nsort_incident = df_incident.sort_values('CalFireIncident')\nax = sns.barplot(data=sort_incident, x = 'Counties', y = 'CalFireIncident')\nax = sns.barplot(data=sort_incident, x = 'Counties', y = 'AcresBurned')\nfor i in ax.containers:\n    ax.bar_label(i,fontsize=14)"
  },
  {
    "objectID": "posts/southcal_fireincident/index.html#average-acresburned-per-incident",
    "href": "posts/southcal_fireincident/index.html#average-acresburned-per-incident",
    "title": "Southern California Wildfire Incident (2013 - 2020)",
    "section": "6. Average AcresBurned per Incident",
    "text": "6. Average AcresBurned per Incident\n\n\nShow the code\nburn_ratio = df_incident[['Counties','CalFireIncident','AcresBurned']]\nburn_ratio['AverageBurned'] = burn_ratio['AcresBurned']/ burn_ratio['CalFireIncident']\nburn_ratio\n\n\n\n\n\n\n  \n    \n      \n      Counties\n      CalFireIncident\n      AcresBurned\n      AverageBurned\n    \n  \n  \n    \n      0\n      Los Angeles\n      9.0\n      194580.0\n      21620.000000\n    \n    \n      1\n      Orange\n      7.0\n      36764.0\n      5252.000000\n    \n    \n      2\n      Riverside\n      133.0\n      97362.0\n      732.045113\n    \n    \n      3\n      San Bernardino\n      25.0\n      90897.0\n      3635.880000\n    \n    \n      4\n      San Diego\n      64.0\n      65394.0\n      1021.781250\n    \n    \n      5\n      San Luis Obispo\n      57.0\n      98757.0\n      1732.578947\n    \n    \n      6\n      Santa Barbara\n      15.0\n      362568.0\n      24171.200000\n    \n    \n      7\n      Ventura\n      17.0\n      428304.0\n      25194.352941\n    \n  \n\n\n\n\n\n\nShow the code\nplt.rcParams['figure.figsize']=(14,8)\nplt.title(\"Average AcresBurned per Incident in Southern California(2013 - 2020)\")\nsort_burned = burn_ratio.sort_values('AverageBurned')\nax = sns.barplot(data=sort_burned, x = 'Counties', y = 'AverageBurned')\nfor i in ax.containers:\n    ax.bar_label(i,fontsize=14)"
  },
  {
    "objectID": "posts/southcal_weather_2010_2020/index.html",
    "href": "posts/southcal_weather_2010_2020/index.html",
    "title": "Southern California Weather Exploratory Analysis (2010 - 2020)",
    "section": "",
    "text": "Exploratory Data Analysis\n\n4.1. Descriptive Analysis by County\n\n4.1.1. San Bernardino\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[34.94560256738246, -116.18973420594098], popup=\" San Bernardino\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n\nShow the code\nsb_df = clean_df[(clean_df['County'] == 'San Bernardino')]\nsb_df.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Conditions\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n  \n  \n    \n      12412\n      San Bernardino, CA, United States\n      2010-01-01\n      69.8\n      40.7\n      54.0\n      0.0\n      5.8\n      151.21\n      9.9\n      20.1\n      46.13\n      Clear\n      2010\n      1.0\n      1.0\n      San Bernardino\n      CA\n      United States\n    \n  \n\n\n\n\n\n\nShow the code\n#check for missing values\n%R -i sb_df\n%R plot_missing(sb_df)\n%R options(warn=-1)\n\n\n\n\n\no{'warn': [-1], }\n\n\n\nShow the code\ncol= ['Maximum Temperature',\n           'Minimum Temperature',\n           'Temperature',\n           'Precipitation',\n           'Wind Speed', \n           'Wind Direction',\n           'Visibility',\n           'Cloud Cover', \n           'Relative Humidity'\n]\n\n\n4.1.1.1. Data Distributions\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nsb_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"San Bernardino Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.1.2. Variables by Year\n\n\nShow the code\nsb_year = sb_df.groupby(['Year']).mean()\nsb_year= sb_year.drop(\"Month\",axis=1)\nsb_year = sb_year.drop(\"Day\",axis=1)\nplt.style.use('ggplot')\nsb_year.plot(figsize=(14, 8))\nplt.title(\"San Bernardino Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\nShow the code\nsb_year.mean()\n\n\nMaximum Temperature     79.047006\nMinimum Temperature     53.545194\nTemperature             65.148645\nPrecipitation            0.026720\nWind Speed              12.249097\nWind Direction         182.976397\nVisibility               9.416136\nCloud Cover             28.604549\nRelative Humidity       54.718165\ndtype: float64\n\n\n\n\n4.1.1.3. Variables by Month\n\n\nShow the code\nsb_month = sb_df.groupby([\"Month\"]).mean()\nsb_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      67.338123\n      44.230499\n      54.88827\n      0.062581\n      9.241935\n      128.790821\n      9.185044\n      34.169501\n      54.333724\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nsb_month= sb_month.drop(\"Year\",axis=1)\nsb_month = sb_month.drop(\"Day\",axis=1)\n\nsb_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\n# place legend outside\n# plt.legend(bbox_to_anchor = (1.0, 1), loc = 'upper left')\nplt.title(\"San Bernardino Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.1.4. Overall Conditions\n\n\nShow the code\nsb_cnd = sb_df.groupby(['Conditions']).count()\nsb_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n      2168\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions \ntotal_cnd = sb_cnd['Year']\nexplode = [0.2, 0, 0, 0, 0, 0, 0, 0, 0]\n\nconditions = sb_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nfont1 = {'family':'serif','color':'black','size':20}\nplt.figure(figsize=(10, 8))\nplt.title(\"San Bernardino Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.savefig(\"sb_pie.jpg\") #save as jpg\nplt.show()\n\n\n\n\n\n\n\n4.1.1.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 238.813226 in July. Average Conditions in San Bernardino are Clear and partially cloudy with 12% of rain.\n\n\n\n4.1.2. San Diego\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[32.715759, -117.163818], popup=\" San Diego\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n\nShow the code\nsd_df = clean_df[(clean_df['County'] == 'San Diego')]\nsd_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 12777 to 12077\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n4.1.2.1. Data Distributions\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nsd_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"San Diego Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.2.2. Variables by Year\n\n\nShow the code\nsd_year = sb_df.groupby(['Year']).mean()\nsd_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      76.245205\n      51.445753\n      62.792329\n      0.053918\n      11.761918\n      181.546027\n      9.027123\n      31.174795\n      58.950603\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nsd_year= sd_year.drop(\"Month\",axis=1)\nsd_year = sd_year.drop(\"Day\",axis=1)\n\nsd_year.plot(figsize=(14, 8))\nplt.title(\"San Diego Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.2.3. Variables by Month\n\n\nShow the code\nsd_month = sd_df.groupby([\"Month\"]).mean()\nsd_month\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      66.684751\n      51.268035\n      58.515836\n      0.048094\n      11.083284\n      167.868827\n      8.950440\n      53.078006\n      62.250909\n      2015.000000\n      16.000000\n    \n    \n      2.0\n      66.099035\n      52.360772\n      58.994855\n      0.047556\n      12.440836\n      186.927331\n      9.115756\n      53.132476\n      61.922154\n      2015.009646\n      14.639871\n    \n    \n      3.0\n      67.232258\n      55.538710\n      61.029619\n      0.034135\n      12.550440\n      207.504252\n      9.279179\n      58.644868\n      64.851525\n      2015.000000\n      16.000000\n    \n    \n      4.0\n      68.722424\n      57.973333\n      62.997273\n      0.024061\n      13.051212\n      221.290152\n      9.369394\n      59.199091\n      64.978697\n      2015.000000\n      15.500000\n    \n    \n      5.0\n      69.018182\n      60.616422\n      64.363636\n      0.014956\n      12.631672\n      231.854545\n      9.392082\n      67.672141\n      67.177977\n      2015.000000\n      16.000000\n    \n    \n      6.0\n      70.742727\n      62.887879\n      66.214242\n      0.000879\n      11.380303\n      238.583242\n      9.379091\n      71.320606\n      72.417848\n      2015.000000\n      15.500000\n    \n    \n      7.0\n      74.851906\n      66.705572\n      70.063050\n      0.008680\n      11.628152\n      253.026276\n      9.514956\n      67.307918\n      73.374047\n      2015.000000\n      16.000000\n    \n    \n      8.0\n      76.870381\n      68.005865\n      71.657185\n      0.001760\n      11.575367\n      254.587273\n      9.399413\n      60.158358\n      72.930469\n      2015.000000\n      16.000000\n    \n    \n      9.0\n      77.727576\n      67.151515\n      71.777273\n      0.004576\n      12.033333\n      240.909273\n      9.110606\n      53.584545\n      70.952091\n      2015.000000\n      15.500000\n    \n    \n      10.0\n      75.734018\n      63.036070\n      68.869208\n      0.017038\n      11.295894\n      203.494164\n      9.100000\n      51.657771\n      65.693460\n      2015.000000\n      16.000000\n    \n    \n      11.0\n      71.054545\n      56.006970\n      63.102424\n      0.036182\n      11.428788\n      177.701879\n      9.106667\n      48.887273\n      61.087424\n      2015.000000\n      15.500000\n    \n    \n      12.0\n      66.145161\n      50.993255\n      58.213783\n      0.072346\n      11.008211\n      166.503196\n      8.983578\n      54.478299\n      62.507185\n      2015.000000\n      16.000000\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nsd_month= sd_month.drop(\"Year\",axis=1)\nsd_month = sd_month.drop(\"Day\",axis=1)\nsd_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"San Diego Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.2.4. Overall Conditions\n\n\nShow the code\nsd_cnd = sd_df.groupby(['Conditions']).count()\nsd_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = sd_cnd['Year']\nexplode = [0, 0, 0.2, 0, 0, 0]\n\nconditions = sd_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nfont1 = {'family':'serif','color':'black','size':20}\nplt.figure(figsize=(14, 8))\nplt.title(\"San Diego Overall Conditins\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.1.5 Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 254.587273 in August. Average Conditions in San Diego are Partially Cloudy and Overcast with 13% of rain.\n\n\n\n4.1.3. Imperial\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[32.834766264823294, -115.57766145113908], popup=\" Imperial\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.3.1. Data Distributions\n\n\nShow the code\nimp_df = clean_df[(clean_df['County'] == 'Imperial')]\nimp_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 5475 to 4757\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nimp_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"Imperial Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.3.2. Variables by Year\n\n\nShow the code\nimp_year = imp_df.groupby(['Year']).mean()\nimp_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      86.790685\n      60.014521\n      73.212877\n      0.015014\n      14.732603\n      206.984493\n      9.823836\n      4.549041\n      37.508795\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nimp_year= imp_year.drop(\"Month\",axis=1)\nimp_year = imp_year.drop(\"Day\",axis=1)\n\nimp_year.plot(figsize=(14, 8))\nplt.title(\"Imperial Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.3.3 Variables by Month\n\n\nShow the code\nimp_month = imp_df.groupby([\"Month\"]).mean()\nimp_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      70.300587\n      43.339296\n      55.843988\n      0.012991\n      10.650733\n      222.918739\n      9.66217\n      9.178299\n      47.091965\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nimp_month= imp_month.drop(\"Year\",axis=1)\nimp_month = imp_month.drop(\"Day\",axis=1)\nimp_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"Imperial Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.3.4. Overall Conditions\n\n\nShow the code\nimp_cnd = imp_df.groupby(['Conditions']).count()\nimp_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n      3631\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = imp_cnd['Year']\nexplode = [0.2, 0, 0, 0, 0, 0]\n\nconditions = imp_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"Imperial Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.3.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased dynamically, start from January and reached the highest score at 228.856129 in February and at 228.623576 in November . Average Conditions in Imperial County are Clear with 5% of rain.\n\n\n\n4.1.4. Los Angeles\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[34.39569370680407, -118.12912286449068], popup=\" Los Angeles\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.4.1. Data Distributions\n\n\nShow the code\nla_df = clean_df[(clean_df['County'] == 'Los Angeles')]\nla_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 6571 to 5855\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nla_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"Los Angeles Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.4.2. Variables by Year\n\n\nShow the code\nla_year = la_df.groupby(['Year']).mean()\nla_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      72.383836\n      57.084384\n      63.785753\n      0.055589\n      7.456164\n      181.119096\n      8.795068\n      31.832329\n      62.164575\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nla_year= la_year.drop(\"Month\",axis=1)\nla_year = la_year.drop(\"Day\",axis=1)\nla_year.plot(figsize=(14, 8))\nplt.title(\"Los Angeles Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.4.3. Variables by Month\n\n\nShow the code\nla_month = la_df.groupby([\"Month\"]).mean()\nla_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      68.397067\n      50.090029\n      58.243109\n      0.06176\n      6.465396\n      153.780997\n      8.839296\n      23.016716\n      57.683871\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nla_month= la_month.drop(\"Year\",axis=1)\nla_month = la_month.drop(\"Day\",axis=1)\nla_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"Los Angeles Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.4.4. Overall Conditions\n\n\nShow the code\nla_cnd = sd_df.groupby(['Conditions']).count()\nla_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n      505\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = la_cnd['Year']\nexplode = [0, 0, 0.2, 0, 0, 0]\n\nconditions = imp_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"Los Angeles Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.4.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 207.495455 in August. Average Conditions in Los Angeles County are Partially Cloudy and Overcast with 13% of rain.\n\n\n\n4.1.5. Orange\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[33.76382457863042, -117.87660720812386], popup=\" Orange\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.5.1. Data Distributions\n\n\nShow the code\nor_df = clean_df[(clean_df['County'] == 'Orange')]\nor_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 10586 to 9881\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nor_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"Orange Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.5.2. Variables by Year\n\n\nShow the code\nor_year = or_df.groupby(['Year']).mean()\nor_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      72.440822\n      55.396438\n      63.090959\n      0.064877\n      9.85589\n      165.149205\n      8.868219\n      39.554247\n      64.048658\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nor_year= or_year.drop(\"Month\",axis=1)\nor_year = or_year.drop(\"Day\",axis=1)\n\nor_year.plot(figsize=(14, 8))\nplt.title(\"Orange Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.5.3 Variables by Month\n\n\nShow the code\nor_month = or_df.groupby([\"Month\"]).mean()\nor_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      68.652493\n      48.44868\n      57.722581\n      0.071672\n      8.616129\n      111.916129\n      8.785044\n      34.991496\n      60.818416\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nor_month= or_month.drop(\"Year\",axis=1)\nor_month = or_month.drop(\"Day\",axis=1)\nor_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"Orange Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.5.4. Overall Conditions\n\n\nShow the code\nor_cnd = or_df.groupby(['Conditions']).count()\nor_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n      1417\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = or_cnd['Year']\nexplode = [0, 0, 0.2, 0, 0, 0]\n\nconditions = or_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"Orange Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.5.5 Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 213.102874 in July. Average Conditions in Orange County are Partially Cloudy and Overcast with 13% of rain.\n\n\n\n4.1.6. San Luis Obispo\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[35.27907764280072, -120.65940043567326], popup=\" San Luis Obispo\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.6.1. Data Distributions\n\n\nShow the code\nslo_df = clean_df[(clean_df['County'] == 'San Luis Obispo')]\nslo_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 13872 to 13168\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nslo_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"San Luis Obispo Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.6.2 Variables by Year\n\n\nShow the code\nslo_year = slo_df.groupby(['Year']).mean()\nslo_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      68.956712\n      48.120548\n      56.87726\n      0.09274\n      15.968767\n      220.865973\n      8.92411\n      37.893699\n      75.711507\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nslo_year= slo_year.drop(\"Month\",axis=1)\nslo_year = slo_year.drop(\"Day\",axis=1)\nslo_year.plot(figsize=(14, 8))\nplt.title(\"San Luis Obispo Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.6.3. Variables by Month\n\n\nShow the code\nslo_month = slo_df.groupby([\"Month\"]).mean()\nslo_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      66.308504\n      43.323754\n      53.265689\n      0.112581\n      13.457771\n      163.994721\n      9.283284\n      29.031085\n      69.864516\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nslo_month= slo_month.drop(\"Year\",axis=1)\nslo_month = slo_month.drop(\"Day\",axis=1)\nslo_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"San Luis Obispo Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.6.4. Overall Conditions\n\n\nShow the code\nslo_cnd = slo_df.groupby(['Conditions']).count()\nslo_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n      1891\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = slo_cnd['Year']\nexplode = [0.2, 0, 0, 0, 0, 0]\n\nconditions = slo_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"San Luis Obispo Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.6.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 264.716545 in June. Average Conditions in San Luis Obispo County are Clear Partially Cloudy with 14% of rain.\n\n\n\n4.1.7. Santa Barbara\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[34.429096458941736, -119.71278822477801], popup=\" Santa Barbara\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.7.1. Data Distributions\n\n\nShow the code\nsbr_df = clean_df[(clean_df['County'] == 'Santa Barbara')]\nsbr_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 14602 to 13900\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nsbr_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"Santa Barbara Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.7.2. Variables by Year\n\n\nShow the code\nsbr_year = sbr_df.groupby(['Year']).mean()\nsbr_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      66.630411\n      50.232877\n      57.89589\n      0.073178\n      12.067945\n      163.635671\n      8.665479\n      34.349315\n      75.194822\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nsbr_year= sbr_year.drop(\"Month\",axis=1)\nsbr_year = sbr_year.drop(\"Day\",axis=1)\nsbr_year.plot(figsize=(14, 8))\nplt.title(\"Santa Barbara Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.7.3 Variables by Month\n\n\nShow the code\nsbr_month = sbr_df.groupby([\"Month\"]).mean()\nsbr_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      64.942815\n      43.632258\n      53.596188\n      0.106393\n      10.498534\n      134.504721\n      9.244868\n      23.208798\n      70.319443\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nsbr_month= sbr_month.drop(\"Year\",axis=1)\nsbr_month = sbr_month.drop(\"Day\",axis=1)\nsbr_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"Santa Barbara Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.7.4. Overall Conditions\n\n\nShow the code\nsbr_cnd = sbr_df.groupby(['Conditions']).count()\nsbr_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n      2137\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = sbr_cnd['Year']\nexplode = [0.2, 0, 0, 0, 0, 0]\n\nconditions = sbr_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"Santa Barbara Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.7.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 188.139531 in May. Average Conditions in Santa Barbara County are Clear Partially Cloudy with 14% of rain.\n\n\n\n4.1.8. Ventura\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[34.282767009655736, -119.29185444090879], popup=\" Ventura\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.8.1. Data Distributions\n\n\nShow the code\nva_df = clean_df[(clean_df['County'] == 'Ventura')]\nva_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 19712 to 19024\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nva_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"Ventura Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.8.2 Variables by Year\n\n\nShow the code\nva_year = va_df.groupby(['Year']).mean()\nva_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      66.409589\n      52.473425\n      58.965753\n      0.063808\n      13.235068\n      180.074986\n      8.470137\n      38.153973\n      72.470685\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nva_year= va_year.drop(\"Month\",axis=1)\nva_year = va_year.drop(\"Day\",axis=1)\nva_year.plot(figsize=(14, 8))\nplt.title(\"Ventura Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.8.3. Variables by Month\n\n\nShow the code\nva_month = va_df.groupby([\"Month\"]).mean()\nva_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      66.268328\n      48.541642\n      56.725513\n      0.079619\n      13.43783\n      136.428944\n      8.949853\n      22.164809\n      60.893109\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nva_month= va_month.drop(\"Year\",axis=1)\nva_month = va_month.drop(\"Day\",axis=1)\nva_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"Ventura Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.8.4. Overall Conditions\n\n\nShow the code\nva_cnd = va_df.groupby(['Conditions']).count()\nva_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n      2057\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = va_cnd['Year']\nexplode = [0.2, 0, 0, 0, 0, 0]\n\nconditions = va_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"Ventura Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.8.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 223.671349 in July. Average Conditions in Ventura County are Clear Partially Cloudy with 13% of rain.\n\n\n\n4.1.9. Riverside\n\n\nShow the code\nm = folium.Map(location=[35.512455820901536, -117.99343087406098], zoom_start= 6)\nfolium.TileLayer('Cartodb Positron').add_to(m)\nfolium.Marker(location=[33.94194882875181, -117.39404642504046], popup=\" Riverside\").add_to(m)\nfolium.GeoJson(\"Southern-California.geojson\", name=\"Southern California\").add_to(m)\nm\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n4.1.9.1. Data Distributions\n\n\nShow the code\nrv_df = clean_df[(clean_df['County'] == 'Riverside')]\nrv_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4018 entries, 11317 to 10613\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 4018 non-null   object        \n 1   Date time            4018 non-null   datetime64[ns]\n 2   Maximum Temperature  4018 non-null   float64       \n 3   Minimum Temperature  4018 non-null   float64       \n 4   Temperature          4018 non-null   float64       \n 5   Precipitation        4018 non-null   float64       \n 6   Wind Speed           4018 non-null   float64       \n 7   Wind Direction       4018 non-null   float64       \n 8   Visibility           4018 non-null   float64       \n 9   Cloud Cover          4018 non-null   float64       \n 10  Relative Humidity    4018 non-null   float64       \n 11  Conditions           4018 non-null   object        \n 12  Year                 4018 non-null   int64         \n 13  Month                4018 non-null   float64       \n 14  Day                  4018 non-null   float64       \n 15  County               4018 non-null   object        \n 16  State                4018 non-null   object        \n 17  Country              4018 non-null   object        \ndtypes: datetime64[ns](1), float64(11), int64(1), object(5)\nmemory usage: 596.4+ KB\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nrv_df.boxplot(col)\nplt.xticks(rotation = 45)\nplt.title(\"Riverside Variable Distributions\",fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.1.9.2. Variables by Year\n\n\nShow the code\nrv_year = rv_df.groupby(['Year']).mean()\nrv_year.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Month\n      Day\n    \n    \n      Year\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      2010\n      76.75726\n      52.460822\n      63.493973\n      0.049096\n      11.880822\n      180.176192\n      8.991781\n      28.004384\n      58.239863\n      6.526027\n      15.720548\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nrv_year= rv_year.drop(\"Month\",axis=1)\nrv_year = rv_year.drop(\"Day\",axis=1)\nrv_year.plot(figsize=(14, 8))\nplt.title(\"Riverside Weather Variable's by Year\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.9.3. Variables by Month\n\n\nShow the code\nrv_month = rv_df.groupby([\"Month\"]).mean()\nrv_month.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Day\n    \n    \n      Month\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1.0\n      67.883284\n      45.28915\n      55.803812\n      0.061026\n      9.696188\n      124.092757\n      9.202053\n      31.183871\n      52.760938\n      2015.0\n      16.0\n    \n  \n\n\n\n\n\n\nShow the code\nplt.style.use('ggplot')\nrv_month= rv_month.drop(\"Year\",axis=1)\nrv_month = rv_month.drop(\"Day\",axis=1)\nrv_month.plot(figsize=(14, 8))\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.title(\"Riverside Weather Variable's by Month\",fontsize=20) \nplt.show()\n\n\n\n\n\n\n\n4.1.9.4. Overall Conditions\n\n\nShow the code\nrv_cnd = rv_df.groupby(['Conditions']).count()\nrv_cnd.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n    \n      Conditions\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Clear\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n      2340\n    \n  \n\n\n\n\n\n\nShow the code\n# conditions\ntotal_cnd = rv_cnd['Year']\nexplode = [0.2, 0, 0, 0, 0, 0]\n\nconditions = rv_cnd.index\n\n# Seaborn color palette to plot pie chart\ncolors = sns.color_palette('pastel')\n\n# create pie chart using matplotlib\nplt.figure(figsize=(14, 8))\nplt.title(\"Riverside Overall Conditions\", loc='left',fontdict = font1)\nplt.pie(total_cnd, labels=conditions, colors=colors,\n        autopct='%.0f%%',explode=explode, shadow=True, rotatelabels='true')\nplt.show()\n\n\n\n\n\n\n\n4.1.9.5. Description\nWeather variables relatively constant on yearly basis. On monthly basis all variables also remain constant except Wind Direction. Wind Direction increased time to time, start from January and reached the highest score at 242.467595 in July. Average Conditions in Riverside County are Clear Partially Cloudy with 12% of rain.\n\n\n\n\n4.2. Trend\n\nShow the code\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\nfilename = \"Southern-California.geojson\"\nfile = open(filename)\ndf = gpd.read_file(file)\n\n# Declare a list that is to be converted into a column\ncounty = ['San Luis Obispo, CA, United States', 'Riverside, CA, United States', \n          'Imperial, CA, United States','Santa Barbara, CA, United States',\n          'Ventura, CA, United States','Los Angeles, CA, United States',\n          'San Diego, CA, United States','Orange, CA, United States','San Bernardino, CA, United States']\n  \n# Using 'Address' as the column name\n# and equating it to the list\ndf['Name'] = county\n\nfrom mitosheet import *; register_analysis(\"id-nyqlbtjbky\");\n    \n# Pivoted into clean_df\ntmp_df = clean_df[['Temperature', 'Conditions', 'Name']]\npivot_table = tmp_df.pivot_table(\n    index=['Name'],\n    columns=['Conditions'],\n    values=['Temperature'],\n    aggfunc={'Temperature': ['median']}\n)\npivot_table.set_axis([flatten_column_header(col) for col in pivot_table.keys()], axis=1, inplace=True)\ntemp_df_pivot = pivot_table.reset_index()\n\ndf_map =df.set_index('Name').join(temp_df_pivot.set_index('Name'))\n\n\n4.2.1. Maximum Temperature\n\n4.2.1.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Maximum Temperature'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Maximum Temperature'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Maximum Temperature'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Maximum Temperature'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Maximum Temperature'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Maximum Temperature'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Maximum Temperature'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Maximum Temperature'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Maximum Temperature'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\" Max Temperature\")\nplt.title(\"Maximum Temperature Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.1.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Maximum Temperature'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Maximum Temperature'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Maximum Temperature'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Maximum Temperature'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Maximum Temperature'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Maximum Temperature'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Maximum Temperature'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Maximum Temperature'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Maximum Temperature'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\" Max Temperature\")\nplt.title(\"Maximum Temperature Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.2. Minimum Temperature\n\n4.2.2.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Minimum Temperature'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Minimum Temperature'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Minimum Temperature'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Minimum Temperature'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Minimum Temperature'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Minimum Temperature'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Minimum Temperature'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Minimum Temperature'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Minimum Temperature'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\" Min Temperature\")\nplt.title(\"Minimum Temperature Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.2.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Minimum Temperature'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Minimum Temperature'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Minimum Temperature'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Minimum Temperature'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Minimum Temperature'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Minimum Temperature'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Minimum Temperature'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Minimum Temperature'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Minimum Temperature'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\" Min Temperature\")\nplt.title(\"Minimum Temperature Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.3. Temperature\n\n4.2.3.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Temperature'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Temperature'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Temperature'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Temperature'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Temperature'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Temperature'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Temperature'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Temperature'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Temperature'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Temperature\")\nplt.title(\"Temperature Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.3.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Temperature'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Temperature'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Temperature'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Temperature'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Temperature'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Temperature'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Temperature'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Temperature'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Temperature'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Temperature\")\nplt.title(\"Temperature Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.4. Precipitation\n\n4.2.4.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Precipitation'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Precipitation'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Precipitation'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Precipitation'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Precipitation'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Precipitation'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Precipitation'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Precipitation'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Precipitation'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Precipitation\")\nplt.title(\"Precipitation Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.4.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Precipitation'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Precipitation'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Precipitation'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Precipitation'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Precipitation'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Precipitation'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Precipitation'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Precipitation'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Precipitation'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Precipitation\")\nplt.title(\"Precipitation Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.5. Wind Speed\n\n4.2.5.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Wind Speed'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Wind Speed'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Wind Speed'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Wind Speed'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Wind Speed'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Wind Speed'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Wind Speed'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Wind Speed'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Wind Speed'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Wind Speed\")\nplt.title(\"Wind Speed Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.5.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Wind Speed'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Wind Speed'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Wind Speed'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Wind Speed'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Wind Speed'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Wind Speed'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Wind Speed'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Wind Speed'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Wind Speed'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Wind Speed\")\nplt.title(\"Wind Speed Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.6. Wind Direction\n\n4.2.6.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Wind Direction'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Wind Direction'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Wind Direction'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Wind Direction'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Wind Direction'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Wind Direction'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Wind Direction'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Wind Direction'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Wind Direction'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Wind Direction\")\nplt.title(\"Wind Direction Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.6.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Wind Direction'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Wind Direction'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Wind Direction'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Wind Direction'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Wind Direction'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Wind Direction'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Wind Direction'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Wind Direction'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Wind Direction'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Wind Direction\")\nplt.title(\"Wind Direction Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.7. Visibility\n\n4.2.7.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Visibility'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Visibility'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Visibility'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Visibility'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Visibility'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Visibility'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Visibility'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Visibility'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Visibility'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Visibility\")\nplt.title(\"Visibility Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.7.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Visibility'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Visibility'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Visibility'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Visibility'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Visibility'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Visibility'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Visibility'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Visibility'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Visibility'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Visibility\")\nplt.title(\"Visibility Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.8. Cloud Cover\n\n4.2.8.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Cloud Cover'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Cloud Cover'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Cloud Cover'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Cloud Cover'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Cloud Cover'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Cloud Cover'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Cloud Cover'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Cloud Cover'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Cloud Cover'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Cloud Cover\")\nplt.title(\"Cloud Cover Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.8.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Cloud Cover'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Cloud Cover'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Cloud Cover'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Cloud Cover'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Cloud Cover'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Cloud Cover'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Cloud Cover'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Cloud Cover'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Cloud Cover'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Cloud Cover\")\nplt.title(\"Cloud Cover Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n4.2.9. Relative Humidity\n\n4.2.9.1. Yearly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_year['Relative Humidity'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_year['Relative Humidity'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_year['Relative Humidity'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_year['Relative Humidity'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_year['Relative Humidity'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_year['Relative Humidity'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_year['Relative Humidity'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_year['Relative Humidity'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_year['Relative Humidity'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Year\")\nplt.ylabel(\"Relative Humidity\")\nplt.title(\"Relative Humidity Yearly Trend\", fontsize=20)\nplt.show()\n\n\n\n\n\n\n\n4.2.9.2. Monthly Trend\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(14, 8))\nax = sb_month['Relative Humidity'].plot(marker='.', color='tab:blue', label= 'San Bernardino')\nax1= sd_month['Relative Humidity'].plot(marker='.', color='tab:orange', label= 'San Diego')\nax2= imp_month['Relative Humidity'].plot(marker='.', color='tab:green', label= 'Imperial')\nax3= la_month['Relative Humidity'].plot(marker='.', color='tab:red', label= 'Los Angeles')\nax4= or_month['Relative Humidity'].plot(marker='.', color='tab:purple', label= 'Orange')\nax5= slo_month['Relative Humidity'].plot(marker='.', color='tab:brown', label= 'San Luis Obispo')\nax6= sbr_month['Relative Humidity'].plot(marker='.', color='tab:pink', label= 'Santa Barbara')\nax7= va_month['Relative Humidity'].plot(marker='.', color='tab:gray', label= 'Ventura')\nax8= rv_month['Relative Humidity'].plot(marker='.', color='tab:olive', label= 'Riverside')\nplt.legend();\nplt.xlabel(\"Month\")\nplt.ylabel(\"Relative Humidity\")\nplt.title(\"Relative Humidity Monthly Trend\", fontsize=20)\nplt.axvline(x = 5, color = 'k',linestyle='dashed', label='Wildfire Season')\nplt.axvline(x = 10, color = 'k',linestyle='dashed')\nplt.show()\n\n\n\n\n\n\n\n\n\n4.3. Correlation\n\nShow the code\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\nfilename = \"Southern-California.geojson\"\nfile = open(filename)\ndf = gpd.read_file(file)\n\n# Declare a list that is to be converted into a column\ncounty = ['San Luis Obispo, CA, United States', 'Riverside, CA, United States', \n          'Imperial, CA, United States','Santa Barbara, CA, United States',\n          'Ventura, CA, United States','Los Angeles, CA, United States',\n          'San Diego, CA, United States','Orange, CA, United States','San Bernardino, CA, United States']\n  \n# Using 'Address' as the column name\n# and equating it to the list\ndf['Name'] = county\n\n\n\nShow the code\nfrom shapely import wkt\ndf['geometry'] = df.geometry.apply(lambda x: wkt.dumps(x))\ndf.head(1)\n\n\n\n\n\n\n  \n    \n      \n      felt-clipSource\n      felt-color\n      felt-showArea\n      felt-type\n      geometry\n      Name\n    \n  \n  \n    \n      0\n      {'geometry': {'coordinates': [[[35.79776624517...\n      RED\n      False\n      Polygon\n      MULTILINESTRING ((-121.4387512207031392 35.797...\n      San Luis Obispo, CA, United States\n    \n  \n\n\n\n\n\n\nShow the code\n# By using str.replace()\ndf['geometry'] = df['geometry'].str.replace('MULTILINESTRING','POLYGON')\ndf['geometry'] = gpd.GeoSeries.from_wkt(df['geometry'])\ndf.head(1)\n\n\n\n\n\n\n  \n    \n      \n      felt-clipSource\n      felt-color\n      felt-showArea\n      felt-type\n      geometry\n      Name\n    \n  \n  \n    \n      0\n      {'geometry': {'coordinates': [[[35.79776624517...\n      RED\n      False\n      Polygon\n      POLYGON ((-121.43875 35.79777, -121.39481 35.7...\n      San Luis Obispo, CA, United States\n    \n  \n\n\n\n\n\n4.3.1. Conditions vs Temperature\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-nyqlbtjbky\");\n    \n# Pivoted into clean_df\ntmp_df = clean_df[['Temperature', 'Conditions', 'Name']]\npivot_table = tmp_df.pivot_table(\n    index=['Name'],\n    columns=['Conditions'],\n    values=['Temperature'],\n    aggfunc={'Temperature': ['median']}\n)\npivot_table.set_axis([flatten_column_header(col) for col in pivot_table.keys()], axis=1, inplace=True)\ntemp_df_pivot = pivot_table.reset_index()\n\ndf_map =df.set_index('Name').join(temp_df_pivot.set_index('Name'))\ndf_map = df_map.reset_index()\n\n\n\nShow the code\ndf_map.head(1)\n\n\n\n\n\n\n  \n    \n      \n      Name\n      felt-clipSource\n      felt-color\n      felt-showArea\n      felt-type\n      geometry\n      Temperature median Clear\n      Temperature median Overcast\n      Temperature median Partially cloudy\n      Temperature median Rain\n      Temperature median Rain, Overcast\n      Temperature median Rain, Partially cloudy\n      Temperature median Snow\n      Temperature median Snow, Overcast\n      Temperature median Snow, Partially cloudy\n    \n  \n  \n    \n      0\n      San Luis Obispo, CA, United States\n      {'geometry': {'coordinates': [[[35.79776624517...\n      RED\n      False\n      Polygon\n      POLYGON ((-121.43875 35.79777, -121.39481 35.7...\n      59.8\n      58.2\n      60.4\n      52.4\n      55.75\n      53.3\n      NaN\n      NaN\n      NaN\n    \n  \n\n\n\n\n\n4.3.1.1. Clear - Temperature\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Temperature median Clear',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Temperature on Clear Condition\", fontsize=20);\n\n\n\n\n\n\n\n4.3.1.2. Rain - Temperature\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Temperature median Rain',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Temperature on Rain Condition\", fontsize=20);\n\n\n\n\n\n\n\n4.3.1.3. Overcast\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Temperature median Overcast',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Temperature on Overcast Condition\", fontsize=20);\n\n\n\n\n\n\n\n\n4.3.2. Conditions vs Wind Direction\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-nyqlbtjbky\");\n    \n# Pivoted into clean_df\ntmp_df = clean_df[['Wind Direction', 'Conditions', 'Name']]\npivot_table = tmp_df.pivot_table(\n    index=['Name'],\n    columns=['Conditions'],\n    values=['Wind Direction'],\n    aggfunc={'Wind Direction': ['median']}\n)\npivot_table.set_axis([flatten_column_header(col) for col in pivot_table.keys()], axis=1, inplace=True)\ntemp_df_pivot = pivot_table.reset_index()\n\ndf_map =df.set_index('Name').join(temp_df_pivot.set_index('Name'))\ndf_map = df_map.reset_index()\n\n\n4.3.2.1 Clear - Wind Direction\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Wind Direction median Clear',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Wind Direction on Clear Condition\", fontsize=20);\n\n\n\n\n\n\n\n4.3.2.2. Rain - Wind Direction\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Wind Direction median Rain',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Wind Direction on Rain Condition\", fontsize=20);\n\n\n\n\n\n\n\n4.3.3.3. Overcast - Wind Direction\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Wind Direction median Overcast',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Wind Direction on Overcast Condition\", fontsize=20);\n\n\n\n\n\n\n\n\n4.3.3. Condition vs Relative Humidity\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-nyqlbtjbky\");\n    \n# Pivoted into clean_df\ntmp_df = clean_df[['Relative Humidity', 'Conditions', 'Name']]\npivot_table = tmp_df.pivot_table(\n    index=['Name'],\n    columns=['Conditions'],\n    values=['Relative Humidity'],\n    aggfunc={'Relative Humidity': ['median']}\n)\npivot_table.set_axis([flatten_column_header(col) for col in pivot_table.keys()], axis=1, inplace=True)\ntemp_df_pivot = pivot_table.reset_index()\n\ndf_map =df.set_index('Name').join(temp_df_pivot.set_index('Name'))\ndf_map = df_map.reset_index()\n\n\n4.3.3.1. Clear - Relative Humidity\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Relative Humidity median Clear',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Relative Humidity on Clear Condition\", fontsize=20);\n\n\n\n\n\n\n\n4.3.3.2. Rain - Relative Humidity\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Relative Humidity median Rain',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Relative Humidity on Rain Condition\", fontsize=20);\n\n\n\n\n\n\n\n4.3.3.3. Overcast - Relative Humidity\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\ndf_map.plot(ax=ax, column='Relative Humidity median Overcast',cmap='rainbow',legend=True)\ndf_map.apply(lambda x: ax.annotate(text=x['Name'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"Median Relative Humidity on Overcast Condition\", fontsize=20);"
  },
  {
    "objectID": "posts/compare_index/index.html",
    "href": "posts/compare_index/index.html",
    "title": "Explore Weathermetric Package and Compare to Formula Calculation",
    "section": "",
    "text": "Show the code\n## Import Library\nimport rpy2.robjects as robjects\n%load_ext rpy2.ipython\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%R require(tidyverse)\n%R require(DataExplorer)\n%R require(readxl)\n%R require(weathermetrics)\n%R require(flextable)\n%R options(warn=-1)\n\n#combine data\ndf1 = pd.read_excel(\"2010_weather_dataset.xlsx\")\ndf2 = pd.read_excel(\"2011_weather_dataset.xlsx\")\ndf3 = pd.read_excel(\"2012_weather_dataset.xlsx\")\ndf4 = pd.read_excel(\"2013_weather_dataset.xlsx\")\ndf5 = pd.read_excel(\"2014_weather_dataset.xlsx\")\ndf6 = pd.read_excel(\"2015_weather_dataset.xlsx\")\ndf7 = pd.read_excel(\"2016_weather_dataset.xlsx\")\ndf8 = pd.read_excel(\"2017_weather_dataset.xlsx\")\ndf9 = pd.read_excel(\"2018_weather_dataset.xlsx\")\ndf10 = pd.read_excel(\"2019_weather_dataset.xlsx\")\ndf11 = pd.read_excel(\"2020_weather_dataset.xlsx\")\n\n# Read CSV files from List\ndf = pd.concat([df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,df11])\n\n# Create New variables\ndf['Year'] = pd.DatetimeIndex(df['Date time']).year\ndf['Month'] = pd.DatetimeIndex(df['Date time']).month\ndf['Day'] = pd.DatetimeIndex(df['Date time']).day\ndf[[\"County\",\"State\",\"Country\"]] = df[\"Name\"].str.split(pat=',',expand=True, n = 2)\n\n# Drop Columns with Null Values\ndf = df.drop(['Heat Index','Wind Chill','Snow','Snow Depth','Wind Gust'], axis=1)\n\n# Filtered County\ndf_south = df[df['County'].apply(lambda val: all(val != s for s in ['Yuba City', 'Yolo', 'Tuolumne', 'Tulare', 'Trinity', 'Tehama', 'Sutter', 'Stanislaus', 'Sonoma', 'Solano', 'Siskiyou', 'Sierra City', 'Shasta', 'Santa Cruz', 'Santa Clara', 'San Mateo', 'San Joaquín', 'San Joaquin', 'San Francisco', 'San Benito', 'Sacramento', 'Plumas', 'Placer', 'Nevada City', 'Napa', 'Monterey', 'Mono', 'Modoc', 'Merced', 'Mendocino', 'Mariposa', 'Marin', 'Madera', 'Lassen', 'Lake City', 'Inyo', 'Humboldt', 'Glenn', 'Fresno', 'El Dorado', 'Del Norte', 'County Line Rd', 'Contra Costa', 'Colusa', 'California City', 'California', 'Calaveras', 'Butte City', 'Amador City', 'Alpine', 'Alameda']))]\ndf_south.head()\n\n\nR[write to console]: Loading required package: tidyverse\n\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nR[write to console]: Loading required package: DataExplorer\n\n\n\nR[write to console]: Loading required package: readxl\n\n\n\nR[write to console]: Loading required package: weathermetrics\n\n\n\nR[write to console]: Loading required package: flextable\n\n\n\nR[write to console]: \nAttaching package: ‘flextable’\n\n\n\n\nR[write to console]: The following object is masked from ‘package:purrr’:\n\n    compose\n\n\n\n\n\n\n\n\n  \n    \n      \n      Name\n      Date time\n      Maximum Temperature\n      Minimum Temperature\n      Temperature\n      Precipitation\n      Wind Speed\n      Wind Direction\n      Visibility\n      Cloud Cover\n      Relative Humidity\n      Conditions\n      Year\n      Month\n      Day\n      County\n      State\n      Country\n    \n  \n  \n    \n      5475\n      Imperial, CA, United States\n      2010-01-01\n      69.3\n      37.2\n      52.4\n      0.0\n      8.0\n      252.79\n      9.9\n      0.0\n      35.89\n      Clear\n      2010.0\n      1.0\n      1.0\n      Imperial\n      CA\n      United States\n    \n    \n      5476\n      Imperial, CA, United States\n      2010-01-02\n      73.2\n      39.6\n      55.3\n      0.0\n      5.9\n      210.79\n      9.7\n      0.1\n      32.16\n      Clear\n      2010.0\n      1.0\n      2.0\n      Imperial\n      CA\n      United States\n    \n    \n      5477\n      Imperial, CA, United States\n      2010-01-03\n      75.0\n      37.8\n      55.9\n      0.0\n      7.9\n      168.78\n      9.9\n      0.0\n      32.29\n      Clear\n      2010.0\n      1.0\n      3.0\n      Imperial\n      CA\n      United States\n    \n    \n      5478\n      Imperial, CA, United States\n      2010-01-04\n      73.7\n      41.1\n      55.3\n      0.0\n      7.0\n      253.29\n      9.9\n      1.4\n      29.90\n      Clear\n      2010.0\n      1.0\n      4.0\n      Imperial\n      CA\n      United States\n    \n    \n      5479\n      Imperial, CA, United States\n      2010-01-05\n      73.7\n      39.6\n      54.9\n      0.0\n      8.1\n      272.92\n      9.9\n      0.1\n      31.93\n      Clear\n      2010.0\n      1.0\n      5.0\n      Imperial\n      CA\n      United States\n    \n  \n\n\n\n\n\n\nShow the code\ndf_south.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 36162 entries, 5475 to 19024\nData columns (total 18 columns):\n #   Column               Non-Null Count  Dtype         \n---  ------               --------------  -----         \n 0   Name                 36162 non-null  object        \n 1   Date time            36162 non-null  datetime64[ns]\n 2   Maximum Temperature  36162 non-null  float64       \n 3   Minimum Temperature  36162 non-null  float64       \n 4   Temperature          36162 non-null  float64       \n 5   Precipitation        36162 non-null  float64       \n 6   Wind Speed           36162 non-null  float64       \n 7   Wind Direction       36162 non-null  float64       \n 8   Visibility           36162 non-null  float64       \n 9   Cloud Cover          36162 non-null  float64       \n 10  Relative Humidity    36162 non-null  float64       \n 11  Conditions           36162 non-null  object        \n 12  Year                 36162 non-null  float64       \n 13  Month                36162 non-null  float64       \n 14  Day                  36162 non-null  float64       \n 15  County               36162 non-null  object        \n 16  State                36162 non-null  object        \n 17  Country              36162 non-null  object        \ndtypes: datetime64[ns](1), float64(12), object(5)\nmemory usage: 5.2+ MB\n\n\n\n\nShow the code\ndf_south = df_south[['County','Date time','Temperature','Relative Humidity']]\ndf_south.rename(columns = {'Temperature':'T', 'Relative Humidity':'RH'}, inplace = True)\ndf_south['No'] = np.arange(len(df_south))\ndf_south.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 36162 entries, 5475 to 19024\nData columns (total 5 columns):\n #   Column     Non-Null Count  Dtype         \n---  ------     --------------  -----         \n 0   County     36162 non-null  object        \n 1   Date time  36162 non-null  datetime64[ns]\n 2   T          36162 non-null  float64       \n 3   RH         36162 non-null  float64       \n 4   No         36162 non-null  int64         \ndtypes: datetime64[ns](1), float64(2), int64(1), object(1)\nmemory usage: 1.7+ MB"
  },
  {
    "objectID": "posts/compare_index/index.html#steadman-regression",
    "href": "posts/compare_index/index.html#steadman-regression",
    "title": "Explore Weathermetric Package and Compare to Formula Calculation",
    "section": "Steadman Regression",
    "text": "Steadman Regression\n\n\nShow the code\nix['Heat_Index'] = 0.5*(ix['T'] + 61.0 + ((ix['T'] - 68.0)*1.2)\n+ (ix['RH']*0.094))\nix['Heat_Index'] = round(ix['Heat_Index'],2)\nix.head()\n\n\n\n\n\n\n  \n    \n      \n      County\n      Date time\n      T\n      RH\n      No\n      Heat_Index\n    \n  \n  \n    \n      5475\n      Imperial\n      2010-01-01\n      52.4\n      35.89\n      0\n      49.03\n    \n    \n      5476\n      Imperial\n      2010-01-02\n      55.3\n      32.16\n      1\n      52.04\n    \n    \n      5477\n      Imperial\n      2010-01-03\n      55.9\n      32.29\n      2\n      52.71\n    \n    \n      5478\n      Imperial\n      2010-01-04\n      55.3\n      29.90\n      3\n      51.94\n    \n    \n      5479\n      Imperial\n      2010-01-05\n      54.9\n      31.93\n      4\n      51.59"
  },
  {
    "objectID": "posts/compare_index/index.html#complete-rohfus-regression",
    "href": "posts/compare_index/index.html#complete-rohfus-regression",
    "title": "Explore Weathermetric Package and Compare to Formula Calculation",
    "section": "Complete Rohfus Regression",
    "text": "Complete Rohfus Regression\n\nShow the code\n idx = ix[ix['Heat_Index'] > 80]\n\n\n\nShow the code\n#Setting variabels\nidx['T2'] = idx['T']*idx['T']\nidx['RH2'] = idx['RH']*idx['RH']\nidx['A1'] = -42.379\nidx['A2'] = idx['T']*2.04901523\nidx['A3'] = idx['RH']*10.14333127\nidx['A4'] = idx['T']*idx['RH']*0.22475541\nidx['A5'] = idx['T2']*0.00683783\nidx['A6'] = idx['RH2']*0.05481717\nidx['A7'] = idx['T2']*idx['RH']*0.00122874\nidx['A8'] = idx['T']*idx['RH2']*0.00085282\nidx['A9'] = idx['T2']*idx['RH2']*0.00000199\n\n#Calculate Heat Index Manually\nidx['Heat_Index'] = idx['A1']+idx['A2']+idx['A3']-idx['A4']-idx['A5']-idx['A6']+idx['A7']+idx['A8']-idx['A9']\nidx['Heat_Index'] = round(idx['Heat_Index'],2)\nidx.head()\n\n\n\n\n\n\n  \n    \n      \n      County\n      Date time\n      T\n      RH\n      No\n      Heat_Index\n      T2\n      RH2\n      A1\n      A2\n      A3\n      A4\n      A5\n      A6\n      A7\n      A8\n      A9\n    \n  \n  \n    \n      5599\n      Imperial\n      2010-05-05\n      81.2\n      23.01\n      124\n      79.49\n      6593.44\n      529.4601\n      -42.379\n      166.380037\n      233.398053\n      419.935705\n      45.084822\n      29.023504\n      186.418356\n      36.664574\n      6.947017\n    \n    \n      5602\n      Imperial\n      2010-05-08\n      81.5\n      20.46\n      127\n      79.55\n      6642.25\n      418.6116\n      -42.379\n      166.994741\n      207.532558\n      374.777399\n      45.418576\n      22.947103\n      166.986301\n      29.095528\n      5.533241\n    \n    \n      5614\n      Imperial\n      2010-05-20\n      83.3\n      27.06\n      139\n      81.20\n      6938.89\n      732.2436\n      -42.379\n      170.682969\n      274.478544\n      506.620720\n      47.446950\n      40.139522\n      230.716041\n      52.018517\n      10.111106\n    \n    \n      5624\n      Imperial\n      2010-05-30\n      81.4\n      19.91\n      149\n      79.46\n      6625.96\n      396.4081\n      -42.379\n      166.789840\n      201.953726\n      364.255249\n      45.307188\n      21.729970\n      162.098899\n      27.518471\n      5.226903\n    \n    \n      5625\n      Imperial\n      2010-05-31\n      82.5\n      27.14\n      150\n      80.62\n      6806.25\n      736.5796\n      -42.379\n      169.043756\n      275.290011\n      503.238601\n      46.539980\n      40.377209\n      226.974850\n      51.824010\n      9.976556\n    \n  \n\n\n\n\n\n\nShow the code\nidx.shape\n\n\n(2478, 17)"
  },
  {
    "objectID": "posts/compare_index/index.html#adjustment-rh-13-80-t-112",
    "href": "posts/compare_index/index.html#adjustment-rh-13-80-t-112",
    "title": "Explore Weathermetric Package and Compare to Formula Calculation",
    "section": "Adjustment : RH < 13, 80 < T < 112",
    "text": "Adjustment : RH < 13, 80 < T < 112\n\n\nShow the code\nidx = idx[['No','County','Date time','T','RH','Heat_Index']]\n\n# Filtered RH\nidx_1 = idx[idx['RH'] < 13]\n\n# Filtered T\nidx_1 = idx_1[(idx_1['T'] > 80) & (idx_1['T'] < 112)]\nidx_1.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 45 entries, 5644 to 4611\nData columns (total 6 columns):\n #   Column      Non-Null Count  Dtype         \n---  ------      --------------  -----         \n 0   No          45 non-null     int64         \n 1   County      45 non-null     object        \n 2   Date time   45 non-null     datetime64[ns]\n 3   T           45 non-null     float64       \n 4   RH          45 non-null     float64       \n 5   Heat_Index  45 non-null     float64       \ndtypes: datetime64[ns](1), float64(3), int64(1), object(1)\nmemory usage: 2.5+ KB\n\n\n\n\nShow the code\nidx_1.head()\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      5644\n      169\n      Imperial\n      2010-06-19\n      85.9\n      11.35\n      82.56\n    \n    \n      5645\n      170\n      Imperial\n      2010-06-20\n      86.6\n      11.87\n      83.11\n    \n    \n      5647\n      172\n      Imperial\n      2010-06-22\n      85.9\n      11.60\n      82.56\n    \n    \n      5649\n      174\n      Imperial\n      2010-06-24\n      91.2\n      12.64\n      86.94\n    \n    \n      5657\n      182\n      Imperial\n      2010-07-02\n      93.9\n      7.60\n      89.21\n    \n  \n\n\n\n\n\n\nShow the code\nidx_1.shape\n\n\n(45, 6)\n\n\n\n\nShow the code\n#Setting Variables\nidx_1['B1'] = (13.0 - idx_1['RH'])/4\nidx_1['B2'] = idx_1['T'] - 95.\nidx_1['B2'] = abs(idx_1['B2'])\nidx_1['B3'] = (17. - idx_1['B2'])/17.\nidx_1['B3'] = round(idx_1['B3'],2)\nidx_1['Heat_Index'] = idx_1['Heat_Index'] -(idx_1['B1']*np.sqrt(idx_1['B3']))\nidx_1['Heat_Index'] = round(idx_1['Heat_Index'],2)\n\n#Sorting columns\nidx_1 = idx_1[['No','County','Date time','T','RH','Heat_Index']]\nidx_1.head()\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      5644\n      169\n      Imperial\n      2010-06-19\n      85.9\n      11.35\n      82.28\n    \n    \n      5645\n      170\n      Imperial\n      2010-06-20\n      86.6\n      11.87\n      82.91\n    \n    \n      5647\n      172\n      Imperial\n      2010-06-22\n      85.9\n      11.60\n      82.32\n    \n    \n      5649\n      174\n      Imperial\n      2010-06-24\n      91.2\n      12.64\n      86.86\n    \n    \n      5657\n      182\n      Imperial\n      2010-07-02\n      93.9\n      7.60\n      87.90\n    \n  \n\n\n\n\n\n\nShow the code\nidx.head()\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      5599\n      124\n      Imperial\n      2010-05-05\n      81.2\n      23.01\n      79.49\n    \n    \n      5602\n      127\n      Imperial\n      2010-05-08\n      81.5\n      20.46\n      79.55\n    \n    \n      5614\n      139\n      Imperial\n      2010-05-20\n      83.3\n      27.06\n      81.20\n    \n    \n      5624\n      149\n      Imperial\n      2010-05-30\n      81.4\n      19.91\n      79.46\n    \n    \n      5625\n      150\n      Imperial\n      2010-05-31\n      82.5\n      27.14\n      80.62\n    \n  \n\n\n\n\n\n\nShow the code\nidx_1.shape\n\n\n(45, 6)\n\n\n\n\nShow the code\nidx[idx['No']==169]\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      5644\n      169\n      Imperial\n      2010-06-19\n      85.9\n      11.35\n      82.56\n    \n  \n\n\n\n\n\nShow the code\n#Create list rows that want to be insert\nlist_no = idx_1['No'].tolist()\n\n\nShow the code\n#Setting 'No' as index\nidx = idx.set_index(\"No\")\n#Drop list_no from the 'idx' Dataframe\nidx.drop(list_no, axis=0, inplace=True)\n\n\nShow the code\nidx = idx.reset_index()\n\n\n\nShow the code\nidx_1.head(1)\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      5644\n      169\n      Imperial\n      2010-06-19\n      85.9\n      11.35\n      82.28\n    \n  \n\n\n\n\n\n\nShow the code\nidx.head(1)\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      0\n      124\n      Imperial\n      2010-05-05\n      81.2\n      23.01\n      79.49\n    \n  \n\n\n\n\n\n\nShow the code\nidx.shape\n\n\n(2433, 6)\n\n\n\nEnsemble Dataframe\n\n\nShow the code\n#join dataframe\njoin = pd.concat([idx, idx_1])\njoin.head(1)\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      0\n      124\n      Imperial\n      2010-05-05\n      81.2\n      23.01\n      79.49\n    \n  \n\n\n\n\n\n\nShow the code\njoin.shape\n\n\n(2478, 6)\n\n\n\n\nShow the code\njoin[join['No']==169]\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n    \n  \n  \n    \n      5644\n      169\n      Imperial\n      2010-06-19\n      85.9\n      11.35\n      82.28"
  },
  {
    "objectID": "posts/compare_index/index.html#adjustment-rh-85-80-t-87",
    "href": "posts/compare_index/index.html#adjustment-rh-85-80-t-87",
    "title": "Explore Weathermetric Package and Compare to Formula Calculation",
    "section": "Adjustment : RH > 85, 80 < T < 87",
    "text": "Adjustment : RH > 85, 80 < T < 87\n\nShow the code\n# Filtered RH\nidx_2 = join[join['RH'] > 85]\n\n\n\nShow the code\nidx_2.shape\n\n\n(0, 6)\n\n\nNo need for adjustment Type 2\n\nEnsemble Dataframe\n\nShow the code\n#Create list rows that want to be insert\nlist_n = join['No'].tolist()\n\n\n\nShow the code\nix.head()\n\n\n\n\n\n\n  \n    \n      \n      County\n      Date time\n      T\n      RH\n      No\n      Heat_Index\n    \n  \n  \n    \n      5475\n      Imperial\n      2010-01-01\n      52.4\n      35.89\n      0\n      49.03\n    \n    \n      5476\n      Imperial\n      2010-01-02\n      55.3\n      32.16\n      1\n      52.04\n    \n    \n      5477\n      Imperial\n      2010-01-03\n      55.9\n      32.29\n      2\n      52.71\n    \n    \n      5478\n      Imperial\n      2010-01-04\n      55.3\n      29.90\n      3\n      51.94\n    \n    \n      5479\n      Imperial\n      2010-01-05\n      54.9\n      31.93\n      4\n      51.59\n    \n  \n\n\n\n\n\n\nShow the code\nix.shape\n\n\n(36162, 6)\n\n\n\nShow the code\nix['index'] = ix['No']\n\n\n\nShow the code\nix.head(1)\n\n\n\n\n\n\n  \n    \n      \n      County\n      Date time\n      T\n      RH\n      No\n      Heat_Index\n      index\n    \n  \n  \n    \n      5475\n      Imperial\n      2010-01-01\n      52.4\n      35.89\n      0\n      49.03\n      0\n    \n  \n\n\n\n\n\nShow the code\n#Setting 'No' as index\nix = ix.set_index(\"No\")\n\n\nShow the code\n#Drop list_no from the 'idx' Dataframe\nix.drop(list_n, axis=0, inplace=True)\n\n\n\nShow the code\nix.shape\n\n\n(33684, 6)\n\n\n\n\nShow the code\nix.tail(100)\n\n\n\n\n\n\n  \n    \n      \n      County\n      Date time\n      T\n      RH\n      Heat_Index\n      index\n    \n    \n      No\n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      36062\n      Ventura\n      2020-09-23\n      64.6\n      84.63\n      64.74\n      36062\n    \n    \n      36063\n      Ventura\n      2020-09-24\n      65.6\n      71.93\n      65.24\n      36063\n    \n    \n      36064\n      Ventura\n      2020-09-25\n      66.1\n      79.74\n      66.16\n      36064\n    \n    \n      36065\n      Ventura\n      2020-09-26\n      67.4\n      81.29\n      67.66\n      36065\n    \n    \n      36066\n      Ventura\n      2020-09-27\n      69.0\n      79.77\n      69.35\n      36066\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      36157\n      Ventura\n      2020-12-27\n      54.8\n      76.75\n      53.59\n      36157\n    \n    \n      36158\n      Ventura\n      2020-12-28\n      49.0\n      85.51\n      47.62\n      36158\n    \n    \n      36159\n      Ventura\n      2020-12-29\n      49.2\n      76.21\n      47.40\n      36159\n    \n    \n      36160\n      Ventura\n      2020-12-30\n      51.4\n      60.11\n      49.07\n      36160\n    \n    \n      36161\n      Ventura\n      2020-12-31\n      50.4\n      60.52\n      47.98\n      36161\n    \n  \n\n100 rows × 6 columns\n\n\n\n\nShow the code\nix['No'] = ix['index'] \n\n\n\nShow the code\n#join dataframe\nresult = pd.concat([join, ix])\nresult.head(1)\n\n\n\n\n\n\n  \n    \n      \n      No\n      County\n      Date time\n      T\n      RH\n      Heat_Index\n      index\n    \n  \n  \n    \n      0\n      124\n      Imperial\n      2010-05-05\n      81.2\n      23.01\n      79.49\n      NaN\n    \n  \n\n\n\n\n\n\nShow the code\nresult.shape\n\n\n(36162, 7)\n\n\n\nShow the code\nresult = result.reset_index()\n\n\nShow the code\nresult = result.set_index('Date time')\n\n\n\nShow the code\nplt.style.use('ggplot')\nplt.figure(figsize=(20, 8))\n\nresult['Heat_Index'].plot(label=\"Formula\")\nplt.title(\"Formula\",fontsize=20)\n\nplt.legend()\nplt.show()"
  },
  {
    "objectID": "posts/heat_index/index.html",
    "href": "posts/heat_index/index.html",
    "title": "Calculate Heat Index of Southern California",
    "section": "",
    "text": "Heat Index by Month\n\n1. January\n\n\nShow the code\nindex_jan = df_map[['County','Heat Index median 1.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_jan['Status'] = pd.cut(index_jan['Heat Index median 1.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_jan.plot(ax=ax, column='Heat Index median 1.0',cmap='YlOrRd',legend=True)\nindex_jan.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"January Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n2. February\n\n\nShow the code\nindex_feb = df_map[['County','Heat Index median 2.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_feb['Status'] = pd.cut(index_feb['Heat Index median 2.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_feb.plot(ax=ax, column='Heat Index median 2.0',cmap='YlOrRd',legend=True)\nindex_feb.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"February Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n3. March\n\n\nShow the code\nindex_mar = df_map[['County','Heat Index median 3.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_mar['Status'] = pd.cut(index_mar['Heat Index median 3.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_mar.plot(ax=ax, column='Heat Index median 3.0',cmap='YlOrRd',legend=True)\nindex_mar.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"March Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n4. April\n\n\nShow the code\nindex_apr = df_map[['County','Heat Index median 4.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_apr['Status'] = pd.cut(index_apr['Heat Index median 4.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_apr.plot(ax=ax, column='Heat Index median 4.0',cmap='YlOrRd',legend=True)\nindex_apr.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"April Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n5. May\n\n\nShow the code\nindex_may = df_map[['County','Heat Index median 5.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_may['Status'] = pd.cut(index_may['Heat Index median 5.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_may.plot(ax=ax, column='Heat Index median 5.0',cmap='YlOrRd',legend=True)\nindex_may.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"May Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n6. June\n\n\nShow the code\nindex_june = df_map[['County','Heat Index median 6.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_june['Status'] = pd.cut(index_june['Heat Index median 6.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_june.plot(ax=ax, column='Heat Index median 6.0',cmap='YlOrRd',legend=True)\nindex_june.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"June Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n7. July\n\n\nShow the code\nindex_july = df_map[['County','Heat Index median 7.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_july['Status'] = pd.cut(index_july['Heat Index median 7.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_july.plot(ax=ax, column='Heat Index median 7.0',cmap='YlOrRd',legend=True)\nindex_july.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"July Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n8. August\n\n\nShow the code\nindex_aug = df_map[['County','Heat Index median 8.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_aug['Status'] = pd.cut(index_aug['Heat Index median 8.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_aug.plot(ax=ax, column='Heat Index median 8.0',cmap='YlOrRd',legend=True)\nindex_aug.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"August Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n9. September\n\n\nShow the code\nindex_sep = df_map[['County','Heat Index median 9.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_sep['Status'] = pd.cut(index_sep['Heat Index median 9.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_sep.plot(ax=ax, column='Heat Index median 9.0',cmap='YlOrRd',legend=True)\nindex_sep.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"September Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n10. October\n\n\nShow the code\nindex_oct = df_map[['County','Heat Index median 10.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_oct['Status'] = pd.cut(index_oct['Heat Index median 10.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_oct.plot(ax=ax, column='Heat Index median 10.0',cmap='YlOrRd',legend=True)\nindex_oct.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"October Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n11. November\n\n\nShow the code\nindex_nov = df_map[['County','Heat Index median 11.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_nov['Status'] = pd.cut(index_nov['Heat Index median 11.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_nov.plot(ax=ax, column='Heat Index median 11.0',cmap='YlOrRd',legend=True)\nindex_nov.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"November Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n12. December\n\n\nShow the code\nindex_dec = df_map[['County','Heat Index median 12.0','geometry']]\nbins = [0, 79.999, 89.999, 102.999, 124.999, 999.999]\ngroup_names = ['Normal','Caution','Extreme Caution','Danger','Extreme Danger']\nindex_dec['Status'] = pd.cut(index_dec['Heat Index median 12.0'], bins, labels=group_names)\n\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 10))\nindex_dec.plot(ax=ax, column='Heat Index median 12.0',cmap='YlOrRd',legend=True)\nindex_dec.apply(lambda x: ax.annotate(text=x['Status'], xy=x.geometry.centroid.coords[0], ha='center'), axis=1)\nplt.title(\"December Heat Index\", fontsize=16);\n\n\n\n\n\n\n\n\nReferences\n\nAnderson GB, Bell ML, Peng RD. 2013. Methods to calculate the heat index as an exposure metric in environmental health research. Environmental Health Perspectives 121(10)::1111-1119 National Weather Service Hydrometeorological Prediction Center Web Team. Heat Index Calculator. 30 Jan 2015. http://www.wpc.ncep.noaa.gov/html/heatindex.shtml. Accessed 18 Dec 2015.\nRothfusz L. 1990. The heat index (or, more than you ever wanted to know about heat index)(Technical Attachment SR 90-23). Fort Worth: Scientific Services Division, National Weather Service.\nR. Steadman, 1979. The assessment of sultriness. Part I: A temperature-humidity index based on human physiology and clothing science. Journal of Applied Meteorology, 18(7):861–873."
  },
  {
    "objectID": "posts/wildfire_by_cause/index.html",
    "href": "posts/wildfire_by_cause/index.html",
    "title": "Cause of Wildfires in California from 1878 - 2020",
    "section": "",
    "text": "Show the code\n# import library\nimport pandas as pd\nimport numpy as np\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# read dataset \ndf = gpd.read_file('fire20_1.gdb')\ndf\n\n\n\n\n\n\n  \n    \n      \n      YEAR_\n      STATE\n      AGENCY\n      UNIT_ID\n      FIRE_NAME\n      INC_NUM\n      ALARM_DATE\n      CONT_DATE\n      CAUSE\n      COMMENTS\n      REPORT_AC\n      GIS_ACRES\n      C_METHOD\n      OBJECTIVE\n      FIRE_NUM\n      Shape_Length\n      Shape_Area\n      geometry\n    \n  \n  \n    \n      0\n      2020\n      CA\n      CDF\n      NEU\n      NELSON\n      00013212\n      2020-06-18T00:00:00+00:00\n      2020-06-23T00:00:00+00:00\n      11.0\n      \n      110.0\n      109.602501\n      1.0\n      1.0\n      None\n      3252.523280\n      4.435447e+05\n      MULTIPOLYGON (((-116841.251 97942.565, -116836...\n    \n    \n      1\n      2020\n      CA\n      CDF\n      NEU\n      AMORUSO\n      00011799\n      2020-06-01T00:00:00+00:00\n      2020-06-04T00:00:00+00:00\n      2.0\n      \n      670.0\n      685.585022\n      1.0\n      1.0\n      None\n      9653.760308\n      2.774464e+06\n      MULTIPOLYGON (((-117328.400 90212.407, -117321...\n    \n    \n      2\n      2020\n      CA\n      CDF\n      NEU\n      ATHENS\n      00018493\n      2020-08-10T00:00:00+00:00\n      2020-03-01T00:00:00+00:00\n      14.0\n      \n      26.0\n      27.300480\n      1.0\n      1.0\n      None\n      1649.643235\n      1.104811e+05\n      MULTIPOLYGON (((-115605.059 92988.787, -115585...\n    \n    \n      3\n      2020\n      CA\n      CDF\n      NEU\n      FLEMING\n      00007619\n      2020-03-31T00:00:00+00:00\n      2020-04-01T00:00:00+00:00\n      9.0\n      \n      13.0\n      12.931550\n      1.0\n      1.0\n      None\n      1577.155857\n      5.233211e+04\n      MULTIPOLYGON (((-110213.270 105975.579, -11020...\n    \n    \n      4\n      2020\n      CA\n      CDF\n      NEU\n      MELANESE\n      00008471\n      2020-04-14T00:00:00+00:00\n      2020-04-19T00:00:00+00:00\n      18.0\n      \n      10.3\n      10.315960\n      1.0\n      1.0\n      None\n      1035.787625\n      4.174722e+04\n      MULTIPOLYGON (((-111793.600 164243.615, -11177...\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      21313\n      2019\n      CA\n      CCO\n      LAC\n      MUREAU\n      None\n      2019-10-30T00:00:00+00:00\n      2019-10-30T00:00:00+00:00\n      NaN\n      None\n      NaN\n      6.297734\n      NaN\n      1.0\n      None\n      741.886109\n      2.548602e+04\n      MULTIPOLYGON (((122180.088 -428557.696, 122181...\n    \n    \n      21314\n      2019\n      CA\n      LRA\n      None\n      OAK\n      None\n      2019-10-28T00:00:00+00:00\n      2019-10-28T00:00:00+00:00\n      14.0\n      NPS#596 Rapid ROS in light grassy 1yr old fuels\n      NaN\n      8.482671\n      8.0\n      1.0\n      None\n      1004.069271\n      3.432815e+04\n      MULTIPOLYGON (((120221.043 -428836.863, 120220...\n    \n    \n      21315\n      2019\n      CA\n      LRA\n      LDF\n      BARHAM\n      00000845\n      2019-11-09T00:00:00+00:00\n      2019-11-10T00:00:00+00:00\n      14.0\n      LACFD 0845\n      NaN\n      64.888229\n      8.0\n      1.0\n      None\n      3383.890106\n      2.625933e+05\n      MULTIPOLYGON (((153212.742 -428811.823, 153216...\n    \n    \n      21316\n      2019\n      CA\n      NPS\n      MNP\n      STAR\n      00013598\n      None\n      None\n      14.0\n      None\n      NaN\n      66.587181\n      8.0\n      1.0\n      None\n      3897.065019\n      2.694688e+05\n      MULTIPOLYGON (((409025.711 -295687.235, 409021...\n    \n    \n      21317\n      2019\n      CA\n      LRA\n      LDF\n      SADDLE RIDGE\n      00001582\n      2019-10-10T00:00:00+00:00\n      2019-10-31T00:00:00+00:00\n      14.0\n      shape from GEOMAC, dat from CAL FIRE web\n      8799.0\n      8799.325195\n      7.0\n      1.0\n      None\n      71393.089537\n      3.560961e+07\n      MULTIPOLYGON (((132094.329 -414240.303, 132019...\n    \n  \n\n21318 rows × 18 columns\n\n\n\n\n\n\n\n\nShow the code\n#dataset information\ndf.info()\n\n\n<class 'geopandas.geodataframe.GeoDataFrame'>\nRangeIndex: 21318 entries, 0 to 21317\nData columns (total 18 columns):\n #   Column        Non-Null Count  Dtype   \n---  ------        --------------  -----   \n 0   YEAR_         21250 non-null  object  \n 1   STATE         21315 non-null  object  \n 2   AGENCY        21313 non-null  object  \n 3   UNIT_ID       21298 non-null  object  \n 4   FIRE_NAME     21304 non-null  object  \n 5   INC_NUM       20677 non-null  object  \n 6   ALARM_DATE    15954 non-null  object  \n 7   CONT_DATE     8638 non-null   object  \n 8   CAUSE         21270 non-null  float64 \n 9   COMMENTS      19547 non-null  object  \n 10  REPORT_AC     8767 non-null   float64 \n 11  GIS_ACRES     21311 non-null  float64 \n 12  C_METHOD      9096 non-null   float64 \n 13  OBJECTIVE     21123 non-null  float64 \n 14  FIRE_NUM      17759 non-null  object  \n 15  Shape_Length  21318 non-null  float64 \n 16  Shape_Area    21318 non-null  float64 \n 17  geometry      21318 non-null  geometry\ndtypes: float64(7), geometry(1), object(10)\nmemory usage: 2.9+ MB\n\n\n\n\n\n\n\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-ynheayqgsj\");\n    \n# Pivoted into df\ntmp_df = df[['YEAR_', 'CAUSE']]\npivot_table = tmp_df.pivot_table(\n    index=['YEAR_'],\n    columns=['CAUSE'],\n    values=['CAUSE'],\n    aggfunc={'CAUSE': ['count']}\n)\npivot_table.set_axis([flatten_column_header(col) for col in pivot_table.keys()], axis=1, inplace=True)\ndf_pivot = pivot_table.reset_index()\n\n# sum df_pivot\ncause = df_pivot.sum()\n\n# create new frame\ncause_df = cause.to_frame()\ncause_df.reset_index(inplace=True)\n\n# column names\ncause_df.columns = ['CAUSE', 'COUNT']\n\n# drop label '0'\ncause_df = cause_df.drop(labels=0, axis=0)\n\n# change format\ncause_df['COUNT'] = cause_df['COUNT'].astype(int)\n\n# sorting\ncause_df = cause_df.sort_values(by=['COUNT'],ascending = False)\n\n# extract string\ncause_df['CAUSE'] = cause_df.CAUSE.str.extract('(\\d+)')\ncause_df\n\n\n\n\n\n\n  \n    \n      \n      CAUSE\n      COUNT\n    \n  \n  \n    \n      14\n      14\n      9475\n    \n    \n      1\n      1\n      3454\n    \n    \n      9\n      9\n      3379\n    \n    \n      2\n      2\n      1246\n    \n    \n      7\n      7\n      903\n    \n    \n      5\n      5\n      723\n    \n    \n      10\n      10\n      454\n    \n    \n      11\n      11\n      412\n    \n    \n      4\n      4\n      380\n    \n    \n      3\n      3\n      342\n    \n    \n      8\n      8\n      196\n    \n    \n      17\n      18\n      90\n    \n    \n      6\n      6\n      80\n    \n    \n      15\n      15\n      21\n    \n    \n      18\n      19\n      17\n    \n    \n      16\n      16\n      14\n    \n    \n      13\n      13\n      11\n    \n    \n      12\n      12\n      5\n    \n  \n\n\n\n\n\nShow the code\ncause_df['CAUSE'] = cause_df.CAUSE.str.extract('(\\d+)')\n\n\n\nShow the code\ncause_df\n\n\n\n\n\n\n  \n    \n      \n      CAUSE\n      COUNT\n    \n  \n  \n    \n      14\n      14\n      9475\n    \n    \n      1\n      1\n      3454\n    \n    \n      9\n      9\n      3379\n    \n    \n      2\n      2\n      1246\n    \n    \n      7\n      7\n      903\n    \n    \n      5\n      5\n      723\n    \n    \n      10\n      10\n      454\n    \n    \n      11\n      11\n      412\n    \n    \n      4\n      4\n      380\n    \n    \n      3\n      3\n      342\n    \n    \n      8\n      8\n      196\n    \n    \n      17\n      18\n      90\n    \n    \n      6\n      6\n      80\n    \n    \n      15\n      15\n      21\n    \n    \n      18\n      19\n      17\n    \n    \n      16\n      16\n      14\n    \n    \n      13\n      13\n      11\n    \n    \n      12\n      12\n      5\n    \n  \n\n\n\n\n\nShow the code\ncause_code = {'CAUSE':['1','2', '3', '4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19'], \n        'Description':['Lightning','Equipment Use','Smoking','Campfire','Debris','Railroad','Arson','Playing with Fire','Miscellaneous','Vehicle','Power Line','Firefighter Training','Non-Firefighter Training','Unidentified','Structure','Aircraft','Volcanic','Escaped Prescribed Burn','Illegal Alien Campfire']}\n\n\n\nShow the code\ncause_code = pd.DataFrame(cause_code)\ncause_code\n\n\n\n\n\n\n  \n    \n      \n      CAUSE\n      Description\n    \n  \n  \n    \n      0\n      1\n      Lightning\n    \n    \n      1\n      2\n      Equipment Use\n    \n    \n      2\n      3\n      Smoking\n    \n    \n      3\n      4\n      Campfire\n    \n    \n      4\n      5\n      Debris\n    \n    \n      5\n      6\n      Railroad\n    \n    \n      6\n      7\n      Arson\n    \n    \n      7\n      8\n      Playing with Fire\n    \n    \n      8\n      9\n      Miscellaneous\n    \n    \n      9\n      10\n      Vehicle\n    \n    \n      10\n      11\n      Power Line\n    \n    \n      11\n      12\n      Firefighter Training\n    \n    \n      12\n      13\n      Non-Firefighter Training\n    \n    \n      13\n      14\n      Unidentified\n    \n    \n      14\n      15\n      Structure\n    \n    \n      15\n      16\n      Aircraft\n    \n    \n      16\n      17\n      Volcanic\n    \n    \n      17\n      18\n      Escaped Prescribed Burn\n    \n    \n      18\n      19\n      Illegal Alien Campfire\n    \n  \n\n\n\n\n\nShow the code\ncause_final = pd.merge(cause_df,cause_code,left_on='CAUSE',right_on='CAUSE')\n\n\n\nShow the code\ncause_final = cause_final[['Description','COUNT']]\ncause_final\n\n\n\n\n\n\n  \n    \n      \n      Description\n      COUNT\n    \n  \n  \n    \n      0\n      Unidentified\n      9475\n    \n    \n      1\n      Lightning\n      3454\n    \n    \n      2\n      Miscellaneous\n      3379\n    \n    \n      3\n      Equipment Use\n      1246\n    \n    \n      4\n      Arson\n      903\n    \n    \n      5\n      Debris\n      723\n    \n    \n      6\n      Vehicle\n      454\n    \n    \n      7\n      Power Line\n      412\n    \n    \n      8\n      Campfire\n      380\n    \n    \n      9\n      Smoking\n      342\n    \n    \n      10\n      Playing with Fire\n      196\n    \n    \n      11\n      Escaped Prescribed Burn\n      90\n    \n    \n      12\n      Railroad\n      80\n    \n    \n      13\n      Structure\n      21\n    \n    \n      14\n      Illegal Alien Campfire\n      17\n    \n    \n      15\n      Aircraft\n      14\n    \n    \n      16\n      Non-Firefighter Training\n      11\n    \n    \n      17\n      Firefighter Training\n      5\n    \n  \n\n\n\n\n\n\nShow the code\nax = sns.barplot(x = 'COUNT', y = 'Description' ,  data = cause_final);\nsns.set_context(\"paper\")\nplt.title(\" Wildfire by cause from 1878 -2020\")\nplt.savefig(\"wildfire_by_cause.png\")\nplt.show()\n\n\n\n\n\n\n\nShow the code\ntime_df = df[['YEAR_','STATE','CAUSE']]\ntime_df.head()\n\n\n\n\n\n\n  \n    \n      \n      YEAR_\n      STATE\n      CAUSE\n    \n  \n  \n    \n      0\n      2020\n      CA\n      11.0\n    \n    \n      1\n      2020\n      CA\n      2.0\n    \n    \n      2\n      2020\n      CA\n      14.0\n    \n    \n      3\n      2020\n      CA\n      9.0\n    \n    \n      4\n      2020\n      CA\n      18.0\n    \n  \n\n\n\n\n\n\nShow the code\ntime_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 21318 entries, 0 to 21317\nData columns (total 3 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   YEAR_   21250 non-null  object \n 1   STATE   21315 non-null  object \n 2   CAUSE   21270 non-null  float64\ndtypes: float64(1), object(2)\nmemory usage: 499.8+ KB\n\n\n\n\nShow the code\n# change time format\ntime_df['YEAR_'] = pd.to_datetime(time_df['YEAR_'])\ntime_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 21318 entries, 0 to 21317\nData columns (total 3 columns):\n #   Column  Non-Null Count  Dtype         \n---  ------  --------------  -----         \n 0   YEAR_   21241 non-null  datetime64[ns]\n 1   STATE   21315 non-null  object        \n 2   CAUSE   21270 non-null  float64       \ndtypes: datetime64[ns](1), float64(1), object(1)\nmemory usage: 499.8+ KB\n\n\n\n\nShow the code\ntime_df['CAUSE'].unique()\n\n\narray([11.,  2., 14.,  9., 18.,  5.,  7.,  8.,  1., 10.,  4., 15.,  3.,\n       16.,  6., 19., 12., nan, 13.])\n\n\n\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-oflyykfaeb\");\n    \n# Pivoted into time_df\ntmp_df = time_df[['CAUSE', 'YEAR_']]\npivot_table = tmp_df.pivot_table(\n    index=['YEAR_'],\n    columns=['CAUSE'],\n    values=['CAUSE'],\n    aggfunc={'CAUSE': ['count']}\n)\npivot_table.set_axis([flatten_column_header(col) for col in pivot_table.keys()], axis=1, inplace=True)\ntime_df_pivot = pivot_table.reset_index()\n\n# Renamed columns Lightning\ntime_df_pivot.rename(columns={'CAUSE count 1.0': 'Lightning'}, inplace=True)\n\n# Renamed columns Equipment Use\ntime_df_pivot.rename(columns={'CAUSE count 2.0': 'Equipment Use'}, inplace=True)\n\n# Renamed columns Smoking\ntime_df_pivot.rename(columns={'CAUSE count 3.0': 'Smoking'}, inplace=True)\n\n# Renamed columns Campfire\ntime_df_pivot.rename(columns={'CAUSE count 4.0': 'Campfire'}, inplace=True)\n\n# Renamed columns Debris\ntime_df_pivot.rename(columns={'CAUSE count 5.0': 'Debris'}, inplace=True)\n\n# Renamed columns Railroad\ntime_df_pivot.rename(columns={'CAUSE count 6.0': 'Railroad'}, inplace=True)\n\n# Renamed columns Arson\ntime_df_pivot.rename(columns={'CAUSE count 7.0': 'Arson'}, inplace=True)\n\n# Renamed columns Playing with Fire\ntime_df_pivot.rename(columns={'CAUSE count 8.0': 'Playing with Fire'}, inplace=True)\n\n# Renamed columns Miscelaneous\ntime_df_pivot.rename(columns={'CAUSE count 9.0': 'Miscelaneous'}, inplace=True)\n\n# Renamed columns Vehicle\ntime_df_pivot.rename(columns={'CAUSE count 10.0': 'Vehicle'}, inplace=True)\n\n# Renamed columns Powerline\ntime_df_pivot.rename(columns={'CAUSE count 11.0': 'Powerline'}, inplace=True)\n\n# Renamed columns Firefighter Training\ntime_df_pivot.rename(columns={'CAUSE count 12.0': 'Firefighter Training'}, inplace=True)\n\n# Renamed columns Non-Firefighter Training\ntime_df_pivot.rename(columns={'CAUSE count 13.0': 'Non-Firefighter Training'}, inplace=True)\n\n# Renamed columns Unidentified\ntime_df_pivot.rename(columns={'CAUSE count 14.0': 'Unidentified'}, inplace=True)\n\n# Renamed columns Structure\ntime_df_pivot.rename(columns={'CAUSE count 15.0': 'Structure'}, inplace=True)\n\n# Renamed columns Volcanic\ntime_df_pivot.rename(columns={'CAUSE count 16.0': 'Volcanic'}, inplace=True)\n\n# Renamed columns Escaped Prescribed Burn\ntime_df_pivot.rename(columns={'CAUSE count 18.0': 'Escaped Prescribed Burn'}, inplace=True)\n\n# Renamed columns Alien Ilegal Campfire\ntime_df_pivot.rename(columns={'CAUSE count 19.0': 'Alien Ilegal Campfire'}, inplace=True)\n\n# Renamed columns Illegal Alien  Campfire\ntime_df_pivot.rename(columns={'Alien Ilegal Campfire': 'Illegal Alien  Campfire'}, inplace=True)\ntime_df_pivot.head()\n\n\n\n\n\n\n  \n    \n      \n      YEAR_\n      Lightning\n      Equipment Use\n      Smoking\n      Campfire\n      Debris\n      Railroad\n      Arson\n      Playing with Fire\n      Miscelaneous\n      Vehicle\n      Powerline\n      Firefighter Training\n      Non-Firefighter Training\n      Unidentified\n      Structure\n      Volcanic\n      Escaped Prescribed Burn\n      Illegal Alien  Campfire\n    \n  \n  \n    \n      0\n      1878-01-01\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      1.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      1895-01-01\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      1.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      2\n      1896-01-01\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      1.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      3\n      1898-01-01\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      5.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      4\n      1900-01-01\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      12.0\n      NaN\n      NaN\n      NaN\n      NaN"
  },
  {
    "objectID": "posts/wildfire_by_cause/index.html#wildfire-cause-1920-2020",
    "href": "posts/wildfire_by_cause/index.html#wildfire-cause-1920-2020",
    "title": "Cause of Wildfires in California from 1878 - 2020",
    "section": "1. Wildfire Cause (1920-2020)",
    "text": "1. Wildfire Cause (1920-2020)\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 8))\nsns.lineplot(x = \"YEAR_\", y = \"Lightning\",ax=ax, data=time_df_pivot)\nsns.lineplot(x = \"YEAR_\", y = \"Equipment Use\",ax=ax, data=time_df_pivot)\nsns.lineplot(x = \"YEAR_\", y = \"Arson\",ax=ax, data=time_df_pivot)\nplt.legend([\"Lightning\",\"Equipment Use\",\"Arson\"], fontsize=16)\nplt.title(\"Wildfire Cause 1920-2020\", fontsize=20);\nplt.show()"
  },
  {
    "objectID": "posts/wildfire_by_cause/index.html#wildfire-by-lightning-cause-2010-2020",
    "href": "posts/wildfire_by_cause/index.html#wildfire-by-lightning-cause-2010-2020",
    "title": "Cause of Wildfires in California from 1878 - 2020",
    "section": "2. Wildfire by Lightning Cause (2010-2020)",
    "text": "2. Wildfire by Lightning Cause (2010-2020)\n\nShow the code\nfrom mitosheet import *; register_analysis(\"id-klmidtngoo\");\n    \n# Filtered YEAR_\ntime_10_20 = time_df_pivot[(time_df_pivot['YEAR_'] > pd.to_datetime('2009-12-31')) & (time_df_pivot['YEAR_'] < pd.to_datetime('2021-01-01'))]\n\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 8))\nsns.lineplot(x = \"YEAR_\", y = \"Lightning\",ax=ax, data=time_10_20)\n# sns.lineplot(x = \"YEAR_\", y = \"Equipment Use\",ax=ax, data=time_10_20)\n# sns.lineplot(x = \"YEAR_\", y = \"Arson\",ax=ax, data=time_10_20)\nplt.axhline(time_10_20.Lightning.mean(), color=\"black\")\nax.lines[1].set_linestyle(\"--\")\nplt.legend([\"Lightning\",\"Mean\"], fontsize=16)\nplt.title(\"Wildfire by Lightning in 2010-2020\", fontsize=20);\nplt.show()"
  },
  {
    "objectID": "posts/wildfire_by_cause/index.html#wildfire-by-equipment-use-cause-2010-2020",
    "href": "posts/wildfire_by_cause/index.html#wildfire-by-equipment-use-cause-2010-2020",
    "title": "Cause of Wildfires in California from 1878 - 2020",
    "section": "2. Wildfire by Equipment Use Cause (2010-2020)",
    "text": "2. Wildfire by Equipment Use Cause (2010-2020)\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 8))\nsns.lineplot(x = \"YEAR_\", y = \"Equipment Use\",ax=ax, data=time_10_20)\nplt.axhline(time_10_20['Equipment Use'].mean(), color=\"black\")\nax.lines[1].set_linestyle(\"--\")\nplt.legend([\"Equipment Use\",\"Mean\"], fontsize=16)\nplt.title(\"Wildfire by Equipment Use 2010-2020\", fontsize=20);\nplt.show()"
  },
  {
    "objectID": "posts/wildfire_by_cause/index.html#wildfire-by-arson-cause-2010-2020",
    "href": "posts/wildfire_by_cause/index.html#wildfire-by-arson-cause-2010-2020",
    "title": "Cause of Wildfires in California from 1878 - 2020",
    "section": "2. Wildfire by Arson Cause (2010-2020)",
    "text": "2. Wildfire by Arson Cause (2010-2020)\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(20, 8))\nsns.lineplot(x = \"YEAR_\", y = \"Arson\",ax=ax, data=time_10_20)\nplt.axhline(time_10_20.Arson.mean(), color=\"black\")\nax.lines[1].set_linestyle(\"--\")\nplt.legend([\"Arson\",\"Mean\"], fontsize=16)\nplt.title(\"Wildfire by Arson 2010-2020\", fontsize=20);\nplt.show()"
  },
  {
    "objectID": "posts/wildfire_by_cause/index.html#source",
    "href": "posts/wildfire_by_cause/index.html#source",
    "title": "Cause of Wildfires in California from 1878 - 2020",
    "section": "3. Source",
    "text": "3. Source\n\nWebsite : https://frap.fire.ca.gov/"
  },
  {
    "objectID": "posts/detective_in_actions/index.html",
    "href": "posts/detective_in_actions/index.html",
    "title": "Weather Detective in Actions",
    "section": "",
    "text": "Ventura County have the highest amount of burned areas with 428,304 AcresBurned from 17 incidents. On the otherside Riverside County had 97,362 AcresBurned from 133 incidents. AverageBurned per incident in Ventura County is 25,194 Acres, and Riverside County is 732 Acres. Reference link\n\n\n\nHigh frequency of wildfires occured on May to October with the maximum frequency happened on July. Medium Frequency of wildfires occured on April, November and December. Low Frequency of wildfires occured from January to March, January seems to be the most save month from wildfire. Reference Link\n\n\n\nHow does lightning form? see Reference Link. What we can do is understand the weather patterns and pay attention about the vegetation."
  },
  {
    "objectID": "posts/weather_fire/index.html",
    "href": "posts/weather_fire/index.html",
    "title": "Weather Conditions in Southern California From Different Level of Risks",
    "section": "",
    "text": "We are using Weather Dataset on 2010 -2020 that are already being cleaned on previous process.See for Reference. And then we catogorized the data into 3 level of Risk: High,Medium and Low for comparison purpose, see for Reference. We do comparison between Low and High level of risk for the clarity of the differentiation.\n\n\nShow the code\nimport rpy2.robjects as robjects\n%load_ext rpy2.ipython\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nimport folium\nfrom matplotlib.pyplot import figure\nfrom tabulate import tabulate\n# plt.style.use('ggplot')\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%R require(tidyverse)\n%R require(DataExplorer)\n%R require(readxl)\n%R require(esquisse)\n%R options(warn=-1)\n\n\n/home/lulus/.pyenv/versions/analysis/lib/python3.7/site-packages/geopandas/_compat.py:115: UserWarning:\n\nThe Shapely GEOS version (3.10.2-CAPI-1.16.0) is incompatible with the GEOS version PyGEOS was compiled with (3.10.3-CAPI-1.16.1). Conversions between both will be slow.\n\n\n\nR[write to console]: Loading required package: tidyverse\n\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nR[write to console]: Loading required package: DataExplorer\n\n\n\nR[write to console]: Loading required package: readxl\n\n\n\nR[write to console]: Loading required package: esquisse\n\n\n\no{'warn': [0], }\n\n\n\n\nShow the code\n%R df <- read_csv(\"clean_df.csv\")\n%R plot_missing(df)\n%R options(warn=-1)\n\n\nNew names:\n• `` -> `...1`\n\n\nRows: 36162 Columns: 19\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): Name, Conditions, County, State, Country\ndbl  (13): ...1, Maximum Temperature, Minimum Temperature, Temperature, Prec...\ndate  (1): Date time\n\n\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\no{'warn': [-1], }\n\n\n\n\nShow the code\ndf = pd.read_csv(\"clean_df.csv\")\ndf.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 36162 entries, 0 to 36161\nData columns (total 19 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   Unnamed: 0           36162 non-null  int64  \n 1   Name                 36162 non-null  object \n 2   Date time            36162 non-null  object \n 3   Maximum Temperature  36162 non-null  float64\n 4   Minimum Temperature  36162 non-null  float64\n 5   Temperature          36162 non-null  float64\n 6   Precipitation        36162 non-null  float64\n 7   Wind Speed           36162 non-null  float64\n 8   Wind Direction       36162 non-null  float64\n 9   Visibility           36162 non-null  float64\n 10  Cloud Cover          36162 non-null  float64\n 11  Relative Humidity    36162 non-null  float64\n 12  Conditions           36162 non-null  object \n 13  Year                 36162 non-null  int64  \n 14  Month                36162 non-null  float64\n 15  Day                  36162 non-null  float64\n 16  County               36162 non-null  object \n 17  State                36162 non-null  object \n 18  Country              36162 non-null  object \ndtypes: float64(11), int64(2), object(6)\nmemory usage: 5.2+ MB\n\n\n\n\nShow the code\ndf['County'].unique()\n\n\narray(['Imperial', 'Los Angeles', 'Orange', 'Riverside', 'San Bernardino',\n       'San Diego', 'San Luis Obispo', 'Santa Barbara', 'Ventura'],\n      dtype=object)\n\n\nWe are removing Imperial County from the parameter because Imperial County do not have wildfire incident on the incident data, see for Reference\n\n\nShow the code\ndf = df[df.County != 'Imperial']\ndf['County'].unique()\n\n\narray(['Los Angeles', 'Orange', 'Riverside', 'San Bernardino',\n       'San Diego', 'San Luis Obispo', 'Santa Barbara', 'Ventura'],\n      dtype=object)"
  },
  {
    "objectID": "posts/weather_fire/index.html#univariate-analysis",
    "href": "posts/weather_fire/index.html#univariate-analysis",
    "title": "Weather Conditions in Southern California From Different Level of Risks",
    "section": "1. Univariate Analysis",
    "text": "1. Univariate Analysis\nWe are doing comparison between 2 same variables from different level of risks : Low and High\n\nShow the code\n# Changed Month to dtype int\ndf['Month'] = df['Month'].fillna(0).astype('int')\n\n# Filtered Month\ndf_high = df[(df['Month'] > 4) & (df['Month'] < 11)]\n\n# Changed Month to dtype int\ndf['Month'] = df['Month'].fillna(0).astype('int')\n\n# Filtered Month\ndf_low = df[(df['Month'] > 0) & (df['Month'] < 4)]\n\n\n1.1. Temperature\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high.Temperature, shade=True, ax=ax);\nsns.kdeplot(df_low.Temperature, shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f9104513f50>\n\n\n\n\n\n\n\n1.2. Maximum Temperature\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Maximum Temperature'],shade=True, ax=ax);\nsns.kdeplot(df_low['Maximum Temperature'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b7e8a590>\n\n\n\n\n\n\n\n1.3. Minimum Temperature\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Minimum Temperature'],shade=True, ax=ax);\nsns.kdeplot(df_low['Minimum Temperature'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b7e76310>\n\n\n\n\n\n\n\n1.4. Wind Direction\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Wind Direction'],shade=True, ax=ax);\nsns.kdeplot(df_low['Wind Direction'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b7b30290>\n\n\n\n\n\n\n\n1.5. Wind Speed\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Wind Speed'],shade=True, ax=ax);\nsns.kdeplot(df_low['Wind Speed'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b7a74c50>\n\n\n\n\n\n\n\n1.6. Relative Humidity\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Relative Humidity'],shade=True, ax=ax);\nsns.kdeplot(df_low['Relative Humidity'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b770d8d0>\n\n\n\n\n\n\n\n1.7. Precipitation\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Precipitation'],shade=True, ax=ax);\nsns.kdeplot(df_low['Precipitation'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b76b04d0>\n\n\n\n\n\n\n\n1.8. Cloud Cover\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high['Cloud Cover'],shade=True, ax=ax);\nsns.kdeplot(df_low['Cloud Cover'],shade=True, ax=ax);\nplt.legend(['High Risk','Low Risk'])\n\n\n<matplotlib.legend.Legend at 0x7f90b73ddd10>"
  },
  {
    "objectID": "posts/weather_fire/index.html#bivariate-analysis",
    "href": "posts/weather_fire/index.html#bivariate-analysis",
    "title": "Weather Conditions in Southern California From Different Level of Risks",
    "section": "2. Bivariate Analysis",
    "text": "2. Bivariate Analysis\nAs we know that Temperature had a big impact for wildfire to occured, we are trying to see the correlation between Temperature and other variables on the different level of risks.\n\n2.3. Temperature vs Wind Speed\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high.Temperature,df_high['Wind Speed'], shade=True, n_levels=20, ax=ax);\nsns.kdeplot(df_low.Temperature,df_low['Wind Speed'], shade=True, n_levels=20, ax=ax);\n\n\n\n\n\n\n\n2.3. Temperature vs Wind Direction\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high.Temperature,df_high['Wind Direction'], shade=True, n_levels=20, ax=ax);\nsns.kdeplot(df_low.Temperature,df_low['Wind Direction'], shade=True, n_levels=20, ax=ax);\n\n\n\n\n\n\n\n2.4. Temperature vs Relative Humidity\n\n\nShow the code\nplt.style.use('ggplot')\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.kdeplot(df_high.Temperature,df_high['Relative Humidity'], shade=True, n_levels=20, ax=ax);\nsns.kdeplot(df_low.Temperature,df_low['Relative Humidity'], shade=True, n_levels=20, ax=ax);"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "{‘data science, statistics, and more…’}",
    "section": "",
    "text": "project\n\n\ncalfire\n\n\n\n\nAnalyze the Weathermetric package and compare to formula calculations to understand the differences\n\n\n\n\n\n\nOct 27, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nStatistical analysis on how geographical location of the county effect the weather using South California weather data 2010-2020.[updated: 26 Sept 2022]\n\n\n\n\n\n\nSep 26, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nExploratory data analysis on Southern California Wildfire Incident - [updated: 22 Sept 2022]\n\n\n\n\n\n\nSep 22, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nCalculate heat index using South California weather data 2010-2020.[updated: 6 Oct 2022]\n\n\n\n\n\n\nSep 22, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nSummary of Weather Comparison Between Low and High Risks Season of Wildfire in Southern California using data 2010-2020[updated: 20 Sept 2022]\n\n\n\n\n\n\nSep 20, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nSummary of weather data exploration on Southern California (2010-2020). [ updated: 22 Sept 2022 ]\n\n\n\n\n\n\nSep 19, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nExploratory data analysis of 9 counties in Southern California to analyze weather patterns. List of Counties: San Bernardino, San Diego, Orange, Riverside, Ventura, Imperial, Los Angeles, San Luis Obispo, Santa Barbara.[updated: 1-10-2022]\n\n\n\n\n\n\nSep 7, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nproject\n\n\ncalfire\n\n\n\n\nExploratory data analysis on 1878-2020 wildfire’s data, and also find the wildfire patterns in 2010-2020. ( updated: 18 Sept 2022 )\n\n\n\n\n\n\nJul 24, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nmy_story\n\n\n\n\n\n\n\n\n\n\n\nJul 20, 2022\n\n\nLulus Adhitya\n\n\n\n\n\n\nNo matching items"
  }
]